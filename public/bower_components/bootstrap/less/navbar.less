//
// Navbars
// --------------------------------------------------


// Wrapper and base class
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
  position: relative;
  font-size: @navbar-font-size;
  min-height: @navbar-height; // Ensure a navbar always shows (e.g., without a .navbar-brand in collapsed mode)
  margin-bottom: @navbar-margin-bottom;
  border: 0px solid transparent;
  transition: border-top-width 0s linear,
              background-color 0.2s linear;

  // Prevent floats from breaking the navbar
  &:extend(.clearfix all);

  @media (min-width: @grid-float-breakpoint) {
    border-radius: @navbar-border-radius;

    .container,
    .container-fluid {
        border: 0px solid transparent;
    }
  }
}


// Navbar heading
//
// Groups `.navbar-brand` and `.navbar-toggle` into a single component for easy
// styling of responsive aspects.

.navbar-header {
  &:extend(.clearfix all);

  @media (min-width: @grid-float-breakpoint) {
    float: left;
  }
}


// Navbar collapse (body)
//
// Group your navbar content into this for easy collapsing and expanding across
// various device sizes. By default, this content is collapsed when <768px, but
// will expand past that for a horizontal display.
//
// To start (on mobile devices) the navbar links, forms, and buttons are stacked
// vertically and include a `max-height` to overflow in case you have too much
// content for the user's viewport.

.navbar-collapse {
  overflow-x: visible;
  &:extend(.clearfix all);
  -webkit-overflow-scrolling: touch;

  @media (min-width: @grid-float-breakpoint) {
    width: auto;
    border-top: 0;
    box-shadow: none;

    &.collapse {
      display: block !important;
      padding-bottom: 0; // Override default setting
    }

    // Undo the collapse side padding for navbars with containers to ensure
    // alignment of right-aligned contents.
    .navbar.affix &,
    .navbar-fixed-top &,
    .navbar-static-top &,
    .navbar-fixed-bottom & {
      padding-left: 0;
      padding-right: 0;
    }
  }
}

// Both navbar header and collapse
//
// When a container is present, change the behavior of the header and collapse.

.container,
.container-fluid {
  > .navbar-header,
  > .navbar-collapse {
    @media (min-width: @grid-float-breakpoint) {
      margin-right: 0;
      margin-left:  0;
    }
  }
}


//
// Navbar alignment options
//
// Display the navbar across the entirety of the page or fixed it to the top or
// bottom of the page.

// Static top (unfixed, but 100% wide) navbar
.navbar-static-top {
  z-index: @zindex-navbar;
  margin-bottom: 0;

  @media (min-width: @grid-float-breakpoint) {
    border-radius: 0;

    .container,
    .container-fluid {
        border-width: 0;
        margin-bottom: -1px;
    }
  }
}

// Fix the top/bottom navbars when screen real estate supports it
.navbar.affix,
.navbar-fixed-top,
.navbar-fixed-bottom {
  position: fixed;
  right: 0;
  left: 0;
  z-index: @zindex-navbar-fixed;

  // Undo the rounded corners
  @media (min-width: @grid-float-breakpoint) {
    border-radius: 0;
  }
}
.navbar.affix {
    top: (-1 * @navbar-height);
    border-top-width:  @navbar-height;
    transition: border-top-width .2s ease-out,
                background-color .2s ease-out;
}
.navbar-fixed-top {
  top: 0;

  .container,
  .container-fluid {
      border-width: 0 0 1px;
      margin-bottom: -1px;
  }
}
.navbar-fixed-bottom {
  bottom: 0;
  margin-bottom: 0; // override .navbar defaults

  .container,
  .container-fluid {
      border-width: 1px 0 0;
      margin-top: -1px;
  }
}


// Brand/project name

.navbar-brand {
  float: left;
  padding: @navbar-padding-vertical @navbar-padding-horizontal (@navbar-padding-vertical - 3px);
  font-size: @font-size-large;
  line-height: @line-height-computed;
  height: @navbar-height;

  &:hover,
  &:focus {
    text-decoration: none;
  }

  > img {
    display: block;
  }
}


// Navbar toggle
//
// Custom button for toggling the `.navbar-collapse`, powered by the collapse
// JavaScript plugin.

.navbar-toggle {
  position: relative;
  float: left;
  padding: 9px 0px;
  .navbar-vertical-align(34px);
  background-color: transparent;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 0;
  color: @brand-light-blue;
  margin-right: 12px;

  // We remove the `outline` here, but later compensate by attaching `:hover`
  // styles to `:focus`.
  &:focus {
    outline: 0;
  }

  // Bars
  .icon-bar {
    display: block;
    width: 22px;
    height: 2px;
    border-radius: 1px;
    background-color: @navbar-default-toggle-icon-bar-bg;
  }
  .icon-bar + .icon-bar {
    margin-top: 4px;
  }
  &:hover,
  &:focus {
     color: @brand-light-blue-minus-20;

    .icon-bar {
      background-color: @brand-light-blue-minus-20;
    }
  }

  @media (min-width: @grid-float-breakpoint) {
    display: none;
  }
}


// Navbar nav links
//
// Builds on top of the `.nav` components with its own modifier class to make
// the nav the full height of the horizontal nav (above 768px).

.navbar-nav {
  > li > a {
    padding: (@line-height-computed / 2) @navbar-padding-horizontal;
    line-height: @line-height-computed;

    @media (min-width: @screen-md-min) and (max-width: @screen-md-max) {
        padding-left: 12px;
        padding-right: 12px;
    }
  }
  > li.divider {
    display: none;
  }

  @media (max-width: @grid-float-breakpoint-max) {
    border-bottom: 1px solid @brand-smoke-plus-20;

    .open .dropdown-menu {
        position: relative;
        width: 100%;
        box-shadow: none;
        padding: 0;
        float: none;

        border-top: 1px solid @brand-smoke-plus-20;
        border-bottom: 1px solid @brand-smoke-plus-20;
    }

    // Dropdowns get custom display when collapsed
    .navbar-collapse-flatten {
        .dropdown-toggle {
            display: none;
        }
        .dropdown-menu {
          position: static;
          margin-top: 0;
          background-color: transparent;
          border: 0;
          display: block;

          float: none;
          width: 100%;
          box-shadow: none;
          padding: 0;
        }
    }

    > li > a {
        color: @brand-primary;
        border-radius: @border-radius-base;
    }

    > li.divider {
      display: block;
      .nav-divider(@dropdown-divider-bg);
    }

    li > a {
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;

      &:hover,
      &:focus {
          background-color: @brand-smoke-plus-20;
          color: @brand-primary;
      }
    }
  }

  // Uncollapse the nav
  @media (min-width: @grid-float-breakpoint) {
    float: left;

    > li {
      float: left;
      > a {
        padding-top: @navbar-padding-vertical;
        padding-bottom: (@navbar-padding-vertical - 3px);
        font-size: @navbar-font-size;
      }
    }
  }
}


// Navbar form
//
// Extension of the `.form-inline` with some extra flavor for optimum display in
// our navbars.

.navbar-form {
  padding: 8px @navbar-padding-horizontal;

  .form-group {
    @media (max-width: @grid-float-breakpoint-max) {
      margin-bottom: 5px;

      &:last-child {
        margin-bottom: 0;
      }
    }
  }


  // Undo 100% width for pull classes
  @media (min-width: @grid-float-breakpoint) {
    width: auto;
    border: 0;
    margin-left: 0;
    margin-right: 0;
    padding-top: 0;
    padding-bottom: 0;
    .box-shadow(none);

    // Vertically center in expanded, horizontal navbar
    .navbar-vertical-align(@input-height-small);

    // Mixin behavior for optimum display
    .form-inline();
  }

  @media (max-width: @grid-float-breakpoint) {
      border-bottom: 1px solid @brand-smoke-plus-20;
  }
}


// Dropdown menus

// Menu position and menu carets
@media (min-width: @grid-float-breakpoint) {
  .navbar-nav > li > .dropdown-menu {
    margin-top: 12px;
  }
}
// Menu position and menu caret support for dropups via extra dropup class
.navbar-fixed-bottom .navbar-nav > li > .dropdown-menu {
  margin-bottom: 0;
}


// Buttons in navbars
//
// Vertically center a button within a navbar (when *not* in a form).

.navbar-btn {
  .navbar-vertical-align(@input-height-small);

  &.btn-sm {
    .navbar-vertical-align(@input-height-small);
  }
  &.btn-xs {
    .navbar-vertical-align(22);
  }

  font-weight: @btn-font-weight;

  @media (max-width: @grid-float-breakpoint-max) {
    display: block;
  }
}


// Text in navbars
//
// Add a class to make any element properly align itself vertically within the navbars.

.navbar-text {
  .navbar-vertical-align(@line-height-computed);

  @media (min-width: @grid-float-breakpoint) {
    float: left;
    margin-left: @navbar-padding-horizontal;
    margin-right: @navbar-padding-horizontal;
  }
}


// Component alignment
//
// Repurpose the pull utilities as their own navbar utilities to avoid specificity
// issues with parents and chaining. Only do this when the navbar is uncollapsed
// though so that navbar contents properly stack and align in mobile.
//
// Declared after the navbar components to ensure more specificity on the margins.

@media (min-width: @grid-float-breakpoint) {
  .navbar-left  { .pull-left(); }
  .navbar-right {
    .pull-right();

    ~ .navbar-right {
      margin-right: 0;
    }
  }
}

.navbar.affix {
    background-color: @brand-primary;

    .container,
    .container-fluid {
        border-bottom-color: transparent;
    }
}

// Alternate navbars
// --------------------------------------------------

// Default navbar
.navbar-default {
  background-color: @navbar-default-bg;

  .container,
  .container-fluid {
      border-color: @navbar-default-border;
  }

  .navbar-brand {
    color: @navbar-default-brand-color;
    &:hover,
    &:focus {
      color: @navbar-default-brand-hover-color;
      background-color: @navbar-default-brand-hover-bg;
    }
  }

  .navbar-text {
    color: @navbar-default-color;
  }

  .navbar-nav {
    > li > a {
      color: @navbar-default-link-color;

      @media (min-width: @grid-float-breakpoint) {
          border-bottom: 3px solid transparent;
      }

      &:hover,
      &:focus {
        color: @navbar-default-link-hover-color;
        background-color: @navbar-default-link-hover-bg;
      }
    }
    > .active > a {
      &,
      &:hover,
      &:focus {
        color: @navbar-default-link-active-color;
        background-color: @navbar-default-link-active-bg;
        border-color: @navbar-default-link-active-color;
      }
    }
    > .disabled > a {
      &,
      &:hover,
      &:focus {
        color: @navbar-default-link-disabled-color;
        background-color: @navbar-default-link-disabled-bg;
      }
    }
  }

  // Dropdown menu items
  .navbar-nav {
    // Remove background color from open dropdown
    > .open > a {
      &,
      &:hover,
      &:focus {
        background-color: @navbar-default-link-active-bg;
        color: @navbar-default-link-active-color;
      }
    }

    @media (max-width: @grid-float-breakpoint-max) {
      // Dropdowns get custom display when collapsed
      .open .dropdown-menu {
        > li > a {
          color: @navbar-default-link-color;
          &:hover,
          &:focus {
            color: @navbar-default-link-hover-color;
            background-color: @navbar-default-link-hover-bg;
          }
        }
        > .active > a {
          &,
          &:hover,
          &:focus {
            color: @navbar-default-link-active-color;
            background-color: @navbar-default-link-active-bg;
          }
        }
        > .disabled > a {
          &,
          &:hover,
          &:focus {
            color: @navbar-default-link-disabled-color;
            background-color: @navbar-default-link-disabled-bg;
          }
        }
      }
    }
  }


  // Links in navbars
  //
  // Add a class to ensure links outside the navbar nav are colored correctly.

  .navbar-link {
    color: @link-color;
    &:hover {
      color: @link-hover-color;
    }
  }

  .btn-link {
    color: @navbar-default-link-color;
    &:hover,
    &:focus {
      color: @navbar-default-link-hover-color;
    }
    &[disabled],
    fieldset[disabled] & {
      &:hover,
      &:focus {
        color: @navbar-default-link-disabled-color;
      }
    }
  }
}

// Inverse navbar

.navbar-inverse {
  background-color: @navbar-inverse-bg;

  .container,
  .container-fluid {
      border-color: @navbar-inverse-border;
  }

  .navbar-brand {
    color: @navbar-inverse-brand-color;
    &:hover,
    &:focus {
      color: @navbar-inverse-brand-hover-color;
      background-color: @navbar-inverse-brand-hover-bg;
    }
  }

  .navbar-text {
    color: @navbar-inverse-color;
  }

  .navbar-nav {
    > li > a {
      color: @navbar-inverse-link-color;

      @media (min-width: @grid-float-breakpoint) {
          border-bottom: 3px solid transparent;
      }

      &:hover,
      &:focus {
        color: @navbar-inverse-link-hover-color;
        background-color: @navbar-inverse-link-hover-bg;
      }
    }
    > .active > a {
      &,
      &:hover,
      &:focus {
        color: @navbar-inverse-link-active-color;
        background-color: @navbar-inverse-link-active-bg;
        border-color: @navbar-inverse-link-active-color;
      }
    }
    > .disabled > a {
      &,
      &:hover,
      &:focus {
        color: @navbar-inverse-link-disabled-color;
        background-color: @navbar-inverse-link-disabled-bg;
      }
    }

    @media (max-width: @grid-float-breakpoint-max) {
      > li > a {
        &:hover,
        &:focus {
          background-color: @brand-smoke-plus-20;
          color: @brand-primary;
        }
      }
    }
  }

  // Dropdowns
  .navbar-nav {
    > .open > a {
      &,
      &:hover,
      &:focus {
        background-color: @navbar-inverse-link-active-bg;
        color: @navbar-inverse-link-active-color;
      }
    }

    @media (max-width: @grid-float-breakpoint-max) {
      > li > a {
          color: @brand-primary;
      }
    }
  }

  .navbar-link {
    color: @navbar-inverse-link-color;
    &:hover {
      color: @navbar-inverse-link-hover-color;
    }
  }

  .btn-link {
    color: @navbar-inverse-link-color;
    &:hover,
    &:focus {
      color: @navbar-inverse-link-hover-color;
    }
    &[disabled],
    fieldset[disabled] & {
      &:hover,
      &:focus {
        color: @navbar-inverse-link-disabled-color;
      }
    }
  }
}


.navbar .navbar-brand,
.navbar-inverse .navbar-brand {
    background-repeat: no-repeat;
    background-position: 50% 50%;
    margin-top: 10px;
    margin-right: 10px;
    height: 16px;
    width: 118px;

    color: transparent;

    &:hover,
    &:focus {
        color: transparent;
    }
}
/* Moved to logo.less so as not to repeat SVG.
.navbar .navbar-brand {
    background-image: @logo-full-primary;
}
.navbar-inverse .navbar-brand {
    background-image: @logo-full-inverse;
}
*/

.navbar.bg-primary {
    background-color: @brand-primary;
}
.navbar.bg-info {
    background-color: @brand-light-blue;
}
.navbar.bg-default {
    background-color: @gray-base;
}

.navbar .flag {
    height: 24px;
    width: 24px;
    margin-top: 16px;
    margin-right: 8px;
    float: left;
}
.navbar .logo-text {
    height: 20px;
    width: 104px;
    margin-top: 16.5px;
    margin-right: 8px;
    float: left;
}

.cover {
    display: none;
}
@media (max-width: @grid-float-breakpoint-max) {
    .navbar-collapse {
        position: fixed;
        bottom: 0;
        left: 0;
        right: 0;
        height: 100% !important;

        // Backwards compatibility if collapse-panel missing
        background-color: @brand-white;
        top: (@navbar-height - 2px);
        padding: 8px;

        &.navbar-collapse-with-panel {
            top: 0;
            padding: 0;
            background-color: transparent;
        }

        .navbar-collapse-panel {
            position: fixed;
            height: 100%;
            top: 0;
            overflow-y: scroll;
            padding: 8px;
            background-color: @brand-white;
            color: @brand-primary !important;
            width: @navbar-collapse-max-width;
            max-width: @navbar-collapse-max-width !important;
            transition: transform .35s ease;
            transform: translateX(-@navbar-collapse-max-width);
        }

        .navbar-toggle {
            left: 280px;
            opacity: 0;
            transition: opacity .35s ease;
            display: inline-block;
            position: absolute;
            top: 4px;

            &.close {
                margin-top: 0;
            }
        }

        // Only show toggle after animation finished
        &.in {
            .navbar-toggle {
                opacity: 1;
            }
        }

        .cover {
            display: block;
            width: 100%;
            height: 100%;
            background-color: @brand-primary;
            opacity: 0;
            transition: opacity .35s ease;
        }

        &.in,
        &[aria-expanded=true] {
            .cover {
                opacity: 0.9;
            }
            .navbar-collapse-panel {
                transform: translateX(0);
            }
        }

        .navbar-btn.btn-group {
            display: flex;
            .btn {
                display: block;
                width: 100%;
                text-align: left;

                + .dropdown-toggle {
                    flex: 0;
                }
            }
            .dropdown-menu {
                width: 100%;
            }
        }
    }
}
.navbar .profile-name {
    padding-bottom: 3px;

    .caret {
        margin-top: -16px;
    }

    .text-ellipses {
        max-width: 75px;
        display: inline-block;
    }
    @media (min-width: @screen-lg-min) {
        .text-ellipses {
            max-width: 125px;
        }
    }
    @media (min-width: @screen-xl-min) {
        .text-ellipses {
            max-width: 220px;
        }
    }
}
