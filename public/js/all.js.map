{
  "version": 3,
  "sources": [
    "Tranc.js",
    "App.js",
    "Http.js",
    "NGAc.js",
    "NGChip.js",
    "Notify.js",
    "File.js",
    "Preloader.js",
    "Route.js",
    "AdminCtrl.js",
    "AuthCtrl.js",
    "NGTable.js",
    "Admin/ConstCtrl.js",
    "Admin/CostCtrl.js",
    "Admin/CustomerCtrl.js",
    "Admin/CustomerListCtrl.js",
    "Admin/FlowerCtrl.js",
    "Admin/FlowerPackageCtrl.js",
    "Admin/FlowerPacketCtrl.js",
    "Admin/GroupCtrl.js",
    "Admin/LogCtrl.js",
    "Admin/OrderAddNewCtrl.js",
    "Admin/OrderCtrl.js",
    "Admin/OrderReportCtrl.js",
    "Admin/ProductCtrl.js",
    "Admin/ProfileCtrl.js",
    "Admin/RoleCtrl.js",
    "Chart.js",
    "SelectSm.js",
    "tree.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACntBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxzNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtxjxzxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "all.js",
  "sourcesContent": [
    "'use strict';\nfunction deepFind(obj, path) {\n    var paths = path.split('.')\n        , current = obj\n        , i;\n\n    for (i = 0; i < paths.length; ++i) {\n        if (current[paths[i]] == undefined) {\n            return undefined;\n        } else {\n            current = current[paths[i]];\n        }\n    }\n    return current;\n}\n\nfunction trans(where, attr) {\n    var _tmp = deepFind(_trans_en, where);\n    if (!_tmp) {\n        return where;\n    }\n    for (var i in attr) {\n        _tmp = _tmp.replace(':' + i, attr[i]);\n    }\n\n    return _tmp;\n}\n\nvar _trans = {\n    'message': {\n        'title_delete': '?????? ?????????? ???? ?????? ?????????? ???????? ?????? ????????????',\n        'content_delete': '?????????? ?????????? ???????? ?????? ???????? ?????? :attr ???? ????????',\n        'set_record': '?????????????? :attr ???? ???????????? ???? ???????????? ???? ?????? ????????',\n        'unset_record': '???????????????? ???? ???????? ?????????? ???????? :attr ?????????? ?????? ????????',\n        'delete_record': ':attr ???????? ?????? ???? ???????????? ?????? ??????????.',\n        'time_set': '???????? ???????????? ???????? ?????? ???? ???????????? ???? ?????? ????????',\n        'time_set_error': '???? ???????? ?????????? ???????? ???????? ???????? ?????? ?????????? ?????? ??????.',\n        'delete_record_error': '???????????????? ???? ???????? ?????? :attr ???????? ?????? ?????????? ???? ???????? ??????.  ???????? ?????????? ???????? ???????? ?? ???? ???? ???????? ???????????? ???????? ???? ?????????? ????????.',\n    }\n};\n\n\nvar _trans_en = {\n    'message': {\n        'title_delete': '?????? ?????????? ???? ?????? ?????????? ???????? ?????? ????????????',\n        'content_delete': '?????????? ?????????? ???????? ?????? ???????? ?????? :attr ???? ????????',\n        'desc_delete': '?????????????? ???? ?????????? ???????? ?????? ?????? ?????? ?????????????? ?????????? ???????? ???????????? ??????.',\n        'set_record': '?????????????? :attr ???? ???????????? ???? ???????????? ???? ?????? ????????',\n        'unset_record': 'Sorry! During Setting :attr has problem',\n        'delete_record': ':attr ???????? ?????? ???? ???????????? ?????? ??????????.',\n        'time_set': '???????? ???????????? ???????? ?????? ???? ???????????? ???? ?????? ????????',\n        'time_set_error': '???? ???????? ?????????? ???????? ???????? ???????? ?????? ?????????? ?????? ??????.',\n        'delete_record_error': '???????????????? ???? ???????? ?????? :attr ???????? ?????? ?????????? ???? ???????? ??????.  ???????? ?????????? ???????? ???????? ?? ???? ???? ???????? ???????????? ???????? ???? ?????????? ????????.',\n        'not_found_state': '???????? ???????????????? ???????? ??????????',\n        'error_state': '??????????????! ???????? ?????????? ???? ???????? ?????? ???????????? ?????????? ???????? ?????? . ???????? ???? ???????? ???????????? ?????? ?????????? ???? ???? ???????? ??????????????.',\n        'error_public_state': '??????????????! ?????????? ???? ???????? ?????? ???????????? ????????.',\n    },\n    'page_title': {\n        'consoleprofilesettings': '?????????????? ????????????',\n        'consolemanageusers': '???????????? ??????????????',\n        'consolemanageroles': '???????????? ????????????',\n        'consolemanageconst': '???????????? ???????? ????',\n        'consolemanagelog': '???????????? ?????? ????????????',\n        'consoleproductlist': '??????????????',\n        'consoleproductadd': '???????????? ??????????',\n        'consoleflowerslist': '????????',\n        'consoleorderadd': '???????????? ??????????',\n        'consoleorderlistlist': '?????????? ????',\n        'consoleorderlistunverified': '?????????? ?????? ?????????? ????????',\n        'consoleorderreport': '?????????? ??????????',\n        'consolecustomerlist': '??????????????',\n        'consolecustomeradd': '???????????? ??????????',\n        'consolecustomergroup': '???????? ???????? ??????????',\n        'consolecost': '?????????? ?????? ????????',\n        'consolefloweradd': '???????????? ???? ????????',\n        'consoleflowerlist': '???????? ???? ????',\n        'consoleflower_packageadd': '???????????? ?????????? ???? ????????',\n        'consoleflower_packagelist': '???????? ?????????? ???? ????',\n        'consoleflower_packetadd': '???????????? ???????? ????????',\n        'consoleflower_packetlist': '???????? ???????? ????'\n    },\n    'subject': {\n        'page': 'Page'\n    },\n    'w': {\n        'yes': '??????',\n        'cancel': '????????????',\n    }\n};\n",
    "var app = angular.module('app', [\n    'ngRoute',\n    'ngMaterial',\n    'ngMessages',\n    'ui.router',\n    'ckeditor',\n    'ui.tree',\n    'ngAnimate',\n    'ngTable',\n    'ngResource',\n    'mdColors',\n    'chart.js',\n    'ngFileUpload',\n    'angular-popover',\n    'ui.mask',\n    'mdPickers',\n    'ui.select',\n    'bcherny/formatAsCurrency',\n    'ngJalaaliFlatDatepicker',\n    'ngSanitize'\n]);\n\nfunction home($path) {\n    return __domain + $path;\n\n}\n\napp.config(function ($mdThemingProvider) {\n\n    var neonRedMap = $mdThemingProvider.extendPalette('cyan', {\n        '500': '#00BBD3',\n        '300': '#0097a7',\n        '600': '#00bcd4',\n        '400': '#212121',\n        'contrastDefaultColor': 'light'\n    });\n    // Register the new color palette map with the name <code>neonRed</code>\n    $mdThemingProvider.definePalette('araCyan', neonRedMap);\n    $mdThemingProvider.theme('default')\n        .primaryPalette('light-green', {'default': '700'})\n        .accentPalette('teal', {'default': '500', 'hue-1': '900', 'hue-2': '400', 'hue-3': '300'})\n        .warnPalette('red', {'default': '600'})\n        .backgroundPalette('grey', {'default': '50'});\n});\n\n\nChart.defaults.global.defaultFontFamily = 'yek';\n\n\nvar CircleChart = function () {\n    this.labels = [];\n    this.series = [];\n    this.data = [];\n    this.options = {};\n    this.datasetOverride = {};\n    this.defaultOption = function () {\n        this.options = {\n            legend: {\n                display: false\n            },\n            scales: {\n                xAxes: [\n                    {\n                        gridLines: {\n                            display: false\n                        }\n                    }\n                ],\n                yAxes: [\n                    {\n                        gridLines: {\n                            display: true\n                        }\n                    }\n                ]\n            }\n        };\n    };\n\n    this.init = function () {\n        this.data = [];\n        this.series = ['Series 1'];\n        for (var i = 0; i < 3; i++) {\n            var date = new Date();\n            this.labels.push(date.getDate() + i);\n            this.data.push(getRandomInt(100, 250));\n        }\n    };\n    this.init();\n};\n\nvar LineChart = function () {\n    this.labels = [];\n    this.series = [];\n    this.data = [];\n    this.options = {};\n    this.datasetOverride = [];\n\n    this.defaultOption = function () {\n        this.options = {\n            legend: {\n                display: false\n            },\n            scales: {\n                xAxes: [{\n                    gridLines: {\n                        display: false\n                    }\n                }],\n                yAxes: [\n                    {\n                        gridLines: {\n                            display: true\n                        }\n                    }\n                ]\n            }\n        };\n    };\n\n    this.init = function () {\n        this.data[0] = [];\n        this.data[1] = [];\n        this.data[2] = [];\n        this.series = ['Series 1', 'Series 2', 'Series 3'];\n        for (var i = 0; i < 10; i++) {\n            var date = new Date();\n            this.labels.push(date.getDate() + i);\n            this.data[0].push(getRandomInt(100, 150));\n            this.data[1].push(getRandomInt(100, 150));\n            this.data[2].push(getRandomInt(100, 150));\n        }\n    };\n    this.init();\n};\n\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n",
    "app.factory('htp', function ($http, notify) {\n    var _Htp = function (url, data) {\n        this.options = {};\n        this.afterSuccess = [];\n        var that = this;\n        $http.post(url, data)\n            .success(function (response) {\n                if (that.options.then) {\n                    that.options.then.call(this, response);\n                }\n\n                if (that.options.after) {\n                    that.options.after.call(this, response);\n                }\n                _.each(that.afterSuccess, function (item) {\n                    item.call(that, response);\n                });\n            })\n            .error(function (response, sts) {\n                if (that.options.after) {\n                    that.options.after.call(this, response, sts);\n                }\n                if (that.options.error) {\n                    that.options.error.call(this, response, sts);\n                }\n                switch (sts) {\n                    case 422:\n                        if (that.errorItem) {\n                            that.errorItem.call(this, response);\n                        }\n                        notify('error', trans('message.422'));\n                        break;\n                }\n            });\n    };\n\n\n    _Htp.prototype.then = function (fn) {\n        this.options.then = fn;\n        return this;\n    };\n\n    _Htp.prototype.after = function (fn) {\n        this.options.after = fn;\n        return this;\n    };\n\n    _Htp.prototype.error = function (fn) {\n        this.options.error = fn;\n        return this;\n    };\n\n    _Htp.prototype.errorNotice = function (fn) {\n        this.errorItem = fn;\n        return this;\n    };\n\n    _Htp.prototype.saveSend = function (title) {\n        this.afterSuccess.push(function () {\n            notify('info', trans('message.set_record', {attr: title}))\n        });\n        return this;\n    };\n\n\n    return function (url, data) {\n        return new _Htp(url, data);\n    };\n});",
    "app.directive('useAc', function ($http) {\n    function link(s, elm, attrs) {\n        if (!s.n) {\n            s.n = {};\n        }\n        if (!s.o) {\n            s.o = {}\n        }\n        s.o.querySearch = function ($search) {\n\n            var _export = {textSearch: $search};\n\n            if (s.o.getData) {\n                _export.extra = s.o.getData();\n            }\n            return $http.post(home(s.link), _export).then(function (response) {\n                return response.data;\n            });\n        };\n\n        s.$watch('o.selectedItem', function (n) {\n            s.n = n;\n        });\n    }\n\n    return {\n        restrict: 'A',\n        link: link,\n        scope: {\n            n: '=ngModel',\n            o: '=ngOpt',\n            link: '=ngLink'\n        }\n    }\n});",
    "app.directive('useChip', function ($http) {\n    function link(s, elm, attrs) {\n        if (!s.n) {\n            s.n = {};\n        }\n        if (!s.o) {\n            s.o = {}\n        }\n        s.o.transformChip = function (chip) {\n            if (angular.isObject(chip)) {\n                return chip;\n            }\n            return {name: chip, type: 'new'};\n        };\n        s.o.querySearch = function ($search) {\n            return $http.post(home(s.link), {textSearch: $search}).then(function (response) {\n                return response.data;\n            });\n        };\n    }\n\n    return {\n        restrict: 'A',\n        link: link,\n        scope: {\n            n: '=ngModel',\n            o: '=ngOpt',\n            link: '=ngLink'\n        }\n    }\n});",
    "app.factory('notify', function () {\n    return function ($type, $text, $delay) {\n        $delay = $delay || 7500;\n        var scope = angular.element('#notify-wrapper').scope();\n        if (scope)\n            scope._notify($type, $text, $delay);\n    }\n});\n\n\napp.controller('NotifyCtrl', function ($scope, $timeout) {\n    $scope.admin_notify = [];\n    $scope.times = [];\n    $scope._notify = function ($type, $text, $delay) {\n        $scope.admin_notify.push({type: $type, text: $text, delay: $delay});\n        $scope.times.push($timeout(function () {\n            $scope._destroy(0);\n        }, $delay))\n    };\n    $scope._destroy = function ($index) {\n        $scope.admin_notify = _.without($scope.admin_notify, $scope.admin_notify[$index]);\n        $scope.times = _.without($scope.times, $scope.times[$index]);\n    };\n});",
    "app.directive('useFileUpload', function (htp, Upload) {\n    function link(s, elm, attrs) {\n        if (!s.n) {\n            s.n = {};\n        }\n        s.n = new Fls('file', attrs['fileUploadLink']);\n    }\n\n    var Fls = function ($name, $url) {\n        this.errorUploading = undefined;\n        this.file = undefined;\n        this.success = undefined;\n        this.readyUpload = undefined;\n        this.progress = undefined;\n        this.name = $name;\n        this.has = undefined;\n        this.finish = true;\n        this.url = undefined;\n        this.send_url = $url;\n\n        this.clear = function () {\n            this.errorUploading = this.readyUpload = this.file = this.success = this.progress = undefined;\n        };\n\n        this.clearError = function () {\n            this.errorUploading = undefined;\n        };\n\n        this.__submit = function () {\n            _Upload(this);\n        };\n\n        this.init = function () {\n            this.has = true;\n            this.finish = false;\n        };\n    };\n\n\n    var _Upload = function (fls) {\n        fls.clearError();\n        fls.uploading = true;\n        Upload.upload({\n            url: home(fls.send_url),\n            data: {file: fls.file, type: fls.name}\n        }).then(function (resp) {\n            fls.uploading = false;\n            fls.clear();\n            fls.success = true;\n            fls.finish = true;\n            console.log('resp' , resp);\n            fls.url = resp.data.url;\n        }, function (resp) {\n            fls.errorUploading = true;\n            fls.file = undefined;\n            fls.uploading = false;\n            fls.progress = undefined;\n        }, function (evt) {\n            fls.progress = parseInt(100.0 * evt.loaded / evt.total);\n        });\n    };\n    return {\n        restrict: 'A',\n        link: link,\n        scope: {\n            n: '=ngModel'\n        }\n    }\n});\n\n\n",
    "app.factory('loader', function () {\n    return function ($sts) {\n        var scope = angular.element('#main-progress-bar').scope();\n        if($sts) {\n            scope._on();\n        }\n        else{\n            scope._off();\n        }\n    }\n});\n\napp.controller('PreloaderCtrl', function ($scope, $timeout) {\n    $scope._off = function () {\n        $scope._loader = false;\n    };\n    $scope._on = function () {\n        $scope._loader = true;\n    }\n});",
    "app.factory('httpRequestInterceptor', function ($q, $location, notify) {\n\n    return {\n        'responseError': function (rejection) {\n            // do something on error\n            switch (rejection.status) {\n                case 404:\n                    // notify('warning', '???????? ???????????????? ???????? ??????????');\n                    if (rejection.config.method == 'GET')\n                    // window.history.back();\n                        break;\n                case 401:\n                    // notify('red', '?????? ?????? ???????????? ???? ?????? ?????? ???? ???????????? ????????????');\n                    // if (rejection.config.method == 'GET')\n                    // window.history.back();\n                    \n                    break;\n                case 423:\n                    notify('red', '?????????? ???????? ?????? ???????? ??????. ???????? ?????????? ???????? ????????.');\n                    // window.location.href = home('auth/login');\n                    break;\n                case  406:\n                    break;\n\n            }\n            return $q.reject(rejection);\n        }\n    };\n});\n\napp.config(function ($httpProvider, $stateProvider, $urlRouterProvider) {\n    $httpProvider.interceptors.push('httpRequestInterceptor');\n    var build_url = function ($url) {\n        if ($url.indexOf(':') != -1) {\n            return function ($param) {\n                return home($url);\n            }\n        } else {\n            return home($url);\n        }\n    };\n    $$routes = angular.fromJson($$routes);\n\n\n    var $redirect = {\n        '/': '@/dashboard',\n        'console/order/list': '@/order/list'\n    };\n\n    _.map($redirect, function (_to, _in) {\n        if (/@/.test(_to)) {\n            _to = _to.replace(new RegExp('@'), _in);\n        }\n        $urlRouterProvider.when('/' + _in, '/' + _to);\n    });\n\n    if ($$routes) {\n        _.map($$routes, function (item) {\n            var _item = {};\n            _item.templateUrl = function (url) {\n                if (_.isObject(url) && _.size(url)) {\n                    return home(item.url + '/' + url.id);\n                } else {\n                    return home(item.url);\n                }\n            };\n            if (item.ctrl != 'AdminCtrl') {\n                _item.controller = item.ctrl;\n                _item.controller = item.ctrl;\n            } else {\n                _item.controller = 'AdminCtrl';\n            }\n\n            _item.views = {\n                \"viewMaster\": {\n                    templateUrl: _item.templateUrl,\n                    controller: _item.controller\n                },\n                \"viewTab\": {\n                    templateUrl: _item.templateUrl,\n                    controller: _item.controller\n                }\n            };\n\n            if (item.sref) {\n                _item.state = item.sref;\n            } else {\n                _item.state = item.url.replace(new RegExp('/', 'g'), '.');\n                _item.state = item.url;\n            }\n            _item.url = '/' + item.ui_url;\n            $stateProvider.state(_item.state, _item);\n        });\n    }\n});\n ",
    "app.run(function ($window, $rootScope, htp) {\n    $rootScope.online = navigator.onLine;\n    $window.addEventListener(\"offline\", function () {\n        $rootScope.$apply(function () {\n            $rootScope.online = false;\n        });\n    }, false);\n\n    $window.addEventListener(\"online\", function () {\n        $rootScope.$apply(function () {\n            $rootScope.online = true;\n        });\n    }, false);\n});\n\napp.controller('AdminCtrl', function ($scope, $window, htp, $interval, $rootScope, $timeout, $mdSidenav, $mdUtil, $log, NgTableParams, $resource, $http, $state, $stateParams, notify) {\n    $scope.w_h = $window.innerHeight;\n    var _this = $scope;\n    $scope.show_leftbar = false;\n    $scope.home = home;\n    if ($scope.$parent.$id == 1) {\n\n        $interval(function () {\n            htp(home('check-auth')).then(function (response) {\n                if (response != true) {\n                    $window.location.reload();\n                }\n            });\n        }, 10000);\n\n        $rootScope.$on(\"$stateChangeStart\", function (event, next, current) {\n            $scope.preloder_page = true;\n            $mdSidenav('menu').close();\n        });\n        $rootScope.$on('$stateChangeSuccess',\n            function (event, toState, toParams, fromState, fromParams) {\n                $scope.preloder_page = false;\n                $scope.toolbarTitlePage = [];\n                $scope.toolbarTitlePage.push(trans('page_title.' + toState.state.split('.').join('')));\n                if (!_this.float_tab_active) {\n                    _this.admin_tab = [];\n                } else {\n                    _this.float_tab_active = false;\n                }\n            });\n\n        $rootScope.$on('$stateChangeError', function (event, toState, toParams, fromState, fromParams, error) {\n            $scope.preloder_page = false;\n            switch (error.status) {\n                case 404:\n                    notify('red', trans('message.not_found_state'));\n                    break;\n                case 500:\n                    notify('red', trans('message.error_state'));\n                    break;\n                default:\n                    notify('red', trans('message.error_public_state'));\n                    break;\n            }\n        });\n\n        $rootScope.$watch('online', function (n) {\n            if (n == false) {\n                notify('error', '?????????????? ?????? ???????????????? ?????? ?????? ??????. ???? ???????? ?????? ?????????????? ???????????? ???????????? ???????????? ????????.');\n            }\n        });\n    }\n\n\n    $scope.toggleLeft = buildDelayedToggler('left');\n    $scope.toggleRight = buildToggler('right');\n    $scope.isOpenRight = function () {\n        return $mdSidenav('right').isOpen();\n    };\n    function buildDelayedToggler(navID) {\n        return debounce(function () {\n            $mdSidenav(navID)\n                .toggle()\n                .then(function () {\n                    $log.debug(\"toggle \" + navID + \" is done\");\n                });\n        }, 200);\n    }\n\n    function buildToggler(navID) {\n        return function () {\n            $mdSidenav(navID)\n                .toggle()\n                .then(function () {\n                    $log.debug(\"toggle \" + navID + \" is done\");\n                });\n        }\n    }\n\n    function debounce(func, wait, context) {\n        var timer;\n        return function debounced() {\n            var context = $scope,\n                args = Array.prototype.slice.call(arguments);\n            $timeout.cancel(timer);\n            timer = $timeout(function () {\n                timer = undefined;\n                func.apply(context, args);\n            }, wait || 10);\n        };\n    }\n\n    $scope.demo = {};\n    $scope.toggleMenu = function () {\n        $mdSidenav('menu').open()\n            .then(function () {\n            });\n    };\n\n\n    _this.chartModel = new LineChart();\n    _this.circleChart = new CircleChart();\n    _this.compChart = new LineChart();\n    _this.compChart.labels = ['????????', '????????????', '????????????', '???? ????????', '????????????????', '?????? ????????', '????????'];\n    _this.compChart.data = [\n        [65, -59, 80, 81, -56, 55, -40],\n        [28, 48, -40, 19, 86, 27, 90]\n    ];\n    _this.compChart.defaultOption();\n    _this.compChart.datasetOverride = [\n        {\n\n            label: \"Bar\",\n            borderWidth: 1,\n            type: 'line'\n        },\n        {\n            label: \"Line chart\",\n            hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\n            hoverBorderColor: \"rgba(255,99,132,1)\",\n            type: 'bar'\n        }\n    ];\n    _this.tblRegister = {};\n\n    _this.notify_info = function () {\n        notify('info', '???? ?????????? ??????????????');\n    };\n    _this.notify_error = function () {\n        notify('error', '???? ?????????? ??????????????');\n    };\n});\n\n\napp.controller('MenuCtrl', function ($scope, $timeout, $mdSidenav, $log) {\n\n    $scope.last_menu = undefined;\n    $scope.show_menu = true;\n\n    $scope.toggle = function ($item) {\n        $scope[$item] = !$scope[$item];\n    };\n\n    $scope.deactive_menu = function ($item) {\n        //$scope.active_menu = false;\n    };\n    $scope.set_active_menu = function ($item, $event) {\n        var elm = $($event.currentTarget).siblings('.menu-item-wrapper-inner');\n        if ($scope.last_menu) {\n            $scope.last_menu.height(0);\n        }\n        if ($scope.active_menu == $item) {\n            $scope.active_menu = false;\n            return;\n        }\n        $scope.last_menu = elm;\n        var _h = elm.children().map(function (i) {\n            return $(this).height();\n        });\n        var __h = 0;\n        _h.each(function (i) {\n            __h += _h[i];\n        });\n        elm.height(__h);\n\n        $scope.active_menu = $item;\n    };\n});\n\napp.controller('RightCtrl', function ($scope, $timeout, $mdSidenav, $log) {\n    $scope.close = function () {\n        $mdSidenav('right').close()\n            .then(function () {\n                $log.debug(\"close RIGHT is done\");\n            });\n    };\n\n    var _this = $scope;\n    _this.clickList = function () {\n\n    };\n});\n\napp.controller('SubmitController', function ($scope, $http, notify) {\n    var _this = $scope;\n    _this.loading = function (sts) {\n        _this._loading = sts;\n        _this.Form.$setValidity('loading', (sts == false));\n    };\n    _this.clear = function () {\n        _this.data = {};\n        _this.Form.$setPristine();\n    };\n    _this.clearError = function () {\n        _this.errorItem = {};\n    };\n    _this.submit = function () {\n        _this.loading(true);\n        _this.clearError();\n        $http.post(home(_this.submiterUrl), _this.export())\n            .success(function (response) {\n                _this.clearError();\n                _this.loading(false);\n                _this.clear();\n                notify('info', trans('message.set_record', {attr: _this.submiterName}));\n                if (_this.afterSuccess) {\n                    _this.afterSuccess.call(this, response);\n                }\n            })\n            .error(function (response, sts) {\n                _this.loading(false);\n                notify('error', trans('message.unset_record', {attr: _this.submiterName}));\n                if (sts == 422) {\n                    _this.errorItem = response;\n                }\n            });\n    };\n\n    _this.export = function () {\n        return _this.data;\n    }\n});\n\n\napp.controller('PageListCtrl', function ($scope) {\n    var _this = $scope;\n    _this.tbl = {};\n});\n\napp.controller('MenusCtrl', function ($scope, htp) {\n    var _this = $scope;\n    _this.$watch('menu', function (n) {\n        _this.serv();\n    });\n\n    _this.data = {};\n    _this.list = [];\n    _this.serv = function () {\n        _this.list = [];\n        if (_this.menu) {\n            htp(home('console/node/get-menu-item'), {id: _this.menu}).then(function (response) {\n                _.each(response, function (item) {\n                    item['items'] = [];\n                    if (item['parent']) {\n                        _.findWhere(_this.list, {id: item['parent']})['items'].push(item);\n                    } else {\n                        _this.list.push(item);\n                    }\n                });\n            });\n        }\n    };\n\n    _this.submit = function () {\n        htp(home('console/node/save-menu'), {id: _this.menu, items: _this.list}).saveSend(trans('subject.menu'));\n    };\n\n\n    _this.addMenu = function () {\n        _this.list.push({\n            title: _this.data.title,\n            url: _this.data.url,\n            items: []\n        });\n        _this.data = {};\n        // _this.add.$setPristine();\n    };\n\n    _this.remove = function (scope) {\n        scope.remove();\n    };\n    _this.toggle = function (scope) {\n        scope.toggle();\n\n    };\n});\n\napp.controller('AddPageCtrl', function ($scope, htp, $controller) {\n    $controller('SubmitController', {$scope: $scope});\n    var _this = $scope;\n    _this.submiterUrl = 'console/node/add-page';\n    _this.submiterName = trans('subject.page');\n\n\n    if (_this.edit_mode) {\n        _this.data = _this.dt;\n    }\n});\n\n\napp.controller('FeeCtrl', function ($scope, htp, $controller, notify) {\n    $controller('SubmitController', {$scope: $scope});\n    var _this = $scope;\n    _this.submiterUrl = 'console/fee/set-fee';\n    _this.submiterName = trans('subject.page');\n    _this.data = {};\n    htp(home('console/fee/get-date')).then(function (response) {\n        _this.data.at = response;\n    });\n\n    htp(home('get-currency')).then(function (response) {\n        _this.currency = response;\n    });\n\n\n    _this.$watch('data.currency', function (n) {\n        if (n != undefined) {\n            _this.illegal_change();\n        }\n    });\n\n\n    _this.$watch('data.to', function (n) {\n        if (n != undefined) {\n            _this.illegal_change();\n        }\n    });\n\n    _this.illegal_change = function () {\n        _this.Form.$setValidity('illegal', !(_this.data.currency == _this.data.to));\n        if (_this.data.currency == _this.data.to) {\n            notify('error', trans('message.illegal_change'));\n        }\n    };\n\n    _this.tbl = {};\n});\n\napp.controller('FeeListCtrl', function ($scope, htp, notify) {\n    var _this = $scope;\n    _this.tbl = {};\n    _this.saveRow = function (row) {\n        htp(home('console/fee/save-row'), row).then(function (n) {\n            notify('info', trans('message.set_record'));\n            row.extraRow = false;\n        });\n    }\n});\n\napp.controller('AddOrderCtrl', function ($scope, htp, $controller, Upload) {\n    $controller('SubmitController', {$scope: $scope});\n    var _this = $scope;\n    _this.submiterUrl = 'console/order/set-order';\n    _this.submiterName = trans('subject.order');\n\n    _this.data = {};\n    _this.mdAcTo = {};\n    _this.mdAcIban = {};\n    _this.mdAcCid = {};\n    htp(home('get-currency')).then(function (respoonse) {\n        _this.items = respoonse;\n    });\n\n\n    _this.$watch('data.iban_type', function (n) {\n        _this.ibanCidInfo = undefined;\n        if (n == 'cid') {\n            _this.data.iban = undefined;\n            _this.mdAcIban.searchText = _this.mdAcIban.selectedItem = undefined;\n        } else if (n == 'iban') {\n            _this.data.cid = undefined;\n            _this.mdAcCid.searchText = _this.mdAcCid.selectedItem = undefined;\n        }\n    });\n\n\n    _this.$watch('data.cid', function (n) {\n        if (n && n.id) {\n            _this.hasIban = true;\n            htp(home('console/order/get-iban-from-cid'), {cid: n.id}).then(function (response) {\n                _this.ibanCidInfo = response;\n                console.log('ibanCidInfo', _this.ibanCidInfo);\n            });\n        } else {\n            _this.hasIban = undefined;\n        }\n    });\n\n    _this.$watch('data.iban', function (n) {\n        if (n && n.id) {\n            _this.hasIban = true;\n\n        } else {\n            _this.hasIban = undefined;\n        }\n    });\n\n    _this.mdAcTo.getData = function () {\n        return {from: _this.data.from.id};\n    };\n\n    _this.$watch('data.from', function (n) {\n        if (n && n.id) {\n            _this.data.to = {};\n            _this.mdAcTo.searchText = undefined;\n            _this.change();\n        }\n    });\n    _this.$watch('data.to', function (n) {\n        if (n && n.id) {\n            _this.change();\n        }\n    });\n\n    _this.change = function () {\n        if (_this.data && _this.data.from && _this.data.to && _this.data.from.id && _this.data.to.id) {\n            htp(home('console/order/get-fee'), {\n                from: _this.data.from.id,\n                to: _this.data.to.id\n            }).then(function (response) {\n                if (response) {\n                    _this.dt = response;\n                }\n            });\n        }\n    };\n\n    _this.$watch('dt', function (n) {\n        if (n) {\n            _this.calc();\n        }\n    });\n\n    _this.$watch('data.from_value', function (n) {\n        if (n) {\n            _this.calc();\n        }\n    });\n\n    _this.data.fls = {};\n    _this.uploadFiles = function () {\n        htp(home('console/order/upload-file'), _this.data.files).then(function (response) {\n            console.log('response', response);\n        });\n        var fls = {};\n        _this.data.fls = fls;\n        fls.uploading = true;\n        Upload.upload({\n            url: home('console/order/upload-file'),\n            data: {files: _this.data.files}\n        }).then(function (resp) {\n            fls.uploading = false;\n            // fls.clear();\n            fls.success = true;\n            fls.finish = true;\n            fls.url = resp.data.result;\n            fls.progress = undefined;\n        }, function (resp) {\n            fls.errorUploading = true;\n            fls.file = undefined;\n            fls.uploading = false;\n            fls.progress = undefined;\n        }, function (evt) {\n            fls.progress = parseInt(100.0 * evt.loaded / evt.total);\n        });\n        console.log('_this.data.files', _this.data.files);\n    };\n\n    _this.calc = function () {\n        if (_this.data && _this.data.from_value && _this.dt && _this.dt.percent) {\n            _this.exchange = _this.dt.percent * _this.data.from_value;\n        } else {\n            _this.exchange = undefined;\n        }\n        return _this.exchange;\n    };\n    _this.export = function () {\n        return _.extend(_this.data, _this.dt);\n    };\n});\n\n\napp.controller('OrderListCtrl', function ($scope, htp) {\n    var _this = $scope;\n    console.log('_this', _this);\n    _this.tbl = {};\n    _this.proceed = function (row) {\n        row.preloader = true;\n        htp(home('console/order/proceed-order'), row).then(function (response) {\n            row.preloader = false;\n            row.extraRow = false;\n        });\n    };\n});\n\n\napp.controller('UserCtrl', function ($scope, htp, $controller, Upload) {\n    $controller('SubmitController', {$scope: $scope});\n    var _this = $scope;\n    _this.submiterUrl = 'console/manage/user-add';\n    _this.submiterName = trans('subject.user_add');\n    _this.tbl = {};\n\n\n    _this.change = function (row) {\n        htp(home('console/manage/active-user'), {id: row.id, active: row.active});\n    };\n\n    if (!_this.data) {\n        _this.data = {};\n    } else {\n        console.log('_this.data', _this.data);\n    }\n\n    if (_this.edit_mode) {\n        _this.data = _.extend(_this.data, _this.dt);\n    }\n    _this.confirm_pass = function () {\n        if (_this.Form) {\n            _this.Form.confirm.$setValidity('confirm', _this.data.password == _this.data.confirm);\n        }\n    };\n\n    _this.$watch('data.password', function (n) {\n        _this.confirm_pass();\n    });\n\n    _this.$watch('data.confirm', function (n) {\n        _this.confirm_pass();\n    });\n\n    var Fls = function ($name) {\n        this.errorUploading = undefined;\n        this.file = undefined;\n        this.success = undefined;\n        this.readyUpload = undefined;\n        this.progress = undefined;\n        this.name = $name;\n        this.has = undefined;\n        this.finish = true;\n        this.url = undefined;\n        this.clear = function () {\n            this.errorUploading = this.readyUpload = this.file = this.success = this.progress = undefined;\n        };\n\n        this.clearError = function () {\n            this.errorUploading = undefined;\n        };\n\n        this.__submit = function () {\n            _this._upload(this);\n        };\n\n        this.init = function () {\n            this.has = true;\n            this.finish = false;\n        };\n    };\n    htp(home('console/profile/get-user-data')).then(function (response) {\n        // _this.data = response;\n        _this.data.personal = new Fls('personal');\n        _this.data.personal.url = '';\n        _this.data.personal.url = home(_this.data.personal_picture);\n    });\n\n\n    _this._upload = function (fls) {\n        fls.clearError();\n        fls.uploading = true;\n        Upload.upload({\n            url: home('console/profile/upload-profile-image'),\n            data: {file: fls.file, type: fls.name, uid: _this.data.id}\n        }).then(function (resp) {\n            fls.uploading = false;\n            fls.clear();\n            fls.success = true;\n            fls.finish = true;\n            fls.url = resp.data.url;\n            var d = new Date();\n            _this.data.personal.url = resp.data.url + '?ver=' + d.getTime();\n        }, function (resp) {\n            fls.errorUploading = true;\n            fls.file = undefined;\n            fls.uploading = false;\n            fls.progress = undefined;\n        }, function (evt) {\n            fls.progress = parseInt(100.0 * evt.loaded / evt.total);\n        });\n    };\n\n});\n\n\napp.controller('DeleteCtrl', function ($scope, htp, $mdDialog, notify) {\n    var _this = $scope;\n    _this.destroy = function (id, where, ngTable) {\n        htp(home('console/destroy'), {id: id, where: where})\n            .then(function (response) {\n                notify('warning', '?????????? ???????? ?????? ???? ???????????? ?????? ????');\n                if (ngTable && ngTable != 'null') {\n                    _this.$parent[ngTable].tableParams.reload();\n                }\n\n            });\n    };\n\n    _this.showConfirm = function (ev, id, where, title, ngTable) {\n        var desc = trans('message.desc_delete');\n        if (title) {\n            desc = trans('message.content_delete', {title: title});\n        }\n        var confirm = $mdDialog.confirm()\n            .title(trans('message.title_delete'))\n            .textContent(desc)\n            .ariaLabel('?????? ??????????')\n            .targetEvent(ev)\n            .ok('??????')\n            .cancel('??????');\n        $mdDialog.show(confirm).then(function () {\n            _this.destroy(id, where, ngTable);\n        }, function () {\n\n        });\n    };\n});\napp.controller('DeleteItemCtrl', function ($scope, htp, $mdDialog, notify) {\n    var _this = $scope;\n    _this.destroy = function (id, where) {\n        htp(home('console/destroy'), {id: id, where: where})\n            .then(function (response) {\n                notify('warning', '???????? ???????? ?????? ???? ???????????? ?????? ????');\n\n            });\n    };\n\n    _this.showConfirm = function (ev, id, where, title, $index) {\n        var desc = trans('message.desc_delete');\n        if (title) {\n            desc = trans('message.content_delete', {title: title});\n        }\n        var confirm = $mdDialog.confirm()\n            .title(trans('message.title_delete'))\n            .textContent(desc)\n            .ariaLabel('?????? ????????')\n            .targetEvent(ev)\n            .ok('??????')\n            .cancel('??????');\n        $mdDialog.show(confirm).then(function () {\n            _this.destroy(id, where);\n            var index = _this.packet_type.items.indexOf($index);\n            _this.packet_type.items.splice(index, 1);\n        }, function () {\n\n        });\n    };\n});\napp.controller('EditCtrl', function ($scope, htp, $mdDialog, notify, $mdMedia) {\n    var _this = $scope;\n    _this.showEditDialog = function (ev, template_url, row, ctrl, where, id, ngTable) {\n        var dialog = $mdDialog.show({\n                controller: function ($scope, $controller, dt, $mdDialog, where, id, table) {\n                    $scope.dt = dt;\n                    $scope.edit_mode = true;\n                    $scope.hide = function () {\n                        $mdDialog.hide();\n                    };\n                    $scope.cancel = function () {\n                        $mdDialog.cancel();\n                    };\n                    $scope.editBtnDialog = function () {\n                        $scope.preloader = true;\n                        htp(home('console/edit-dialog'), {\n                            where: where,\n                            id: id,\n                            data: $scope.data\n                        }).then(function (response) {\n                            $scope.preloader = false;\n                            $mdDialog.hide();\n                            if (table && table != 'null') {\n                                _this.$parent[table].reload();\n                            }\n                        });\n                    };\n                    $controller(ctrl, {$scope: $scope});\n                },\n                templateUrl: home(template_url),\n                parent: angular.element(document.body),\n                targetEvent: ev,\n                clickOutsideToClose: true,\n                locals: {\n                    dt: row,\n                    where: where,\n                    table: ngTable,\n                    id: id\n                },\n                fullscreen: true // Only for -xs, -sm breakpoints.\n            })\n            .then(function (answer) {\n\n            });\n    };\n});\n\n\napp.directive('uiSelectAsyncUrl', function ($http) {\n    return {\n        restrict: 'A',\n        link: function (scope, elm, attr) {\n            scope.uiSelectSyncMethod = function (search) {\n                var dt = {text: search};\n                if (attr.uiSelectExtraData) {\n                    dt.extra = scope[attr.uiSelectExtraData].call(this);\n                }\n                return $http.post(home(attr.uiSelectAsyncUrl), dt).then(function (response) {\n                    scope[attr.uiSelectAsyncItems] = response.data;\n                });\n            };\n        }\n    }\n});\n\napp.filter('iif', function () {\n    return function(input, trueValue, falseValue) {\n        return input ? trueValue : falseValue;\n    };\n});",
    "app.controller('RegisterCtrl', function ($scope, $http) {\n    $scope.data = {};\n    $scope.mode = 0;\n    $scope.form_title = ['?????? ?????? ?????? ???????? ???????? ????', '?????? ?????? ?????? ???? ???????????? ?????????? ????', '???? ???????????? ?????? ?????? ?????? ?????????? ???? ???????? ??????'];\n    $scope.valid_pass = function () {\n        if ($scope.register_form) {\n            $scope.register_form.$setValidity('pass', ($scope.data.password == $scope.data.password_confirmation));\n        }\n    };\n    $scope.$watch('data.password', function () {\n        $scope.valid_pass()\n    });\n    $scope.$watch('data.password_confirmation', function () {\n        $scope.valid_pass()\n    });\n\n    $scope.submit = function ($event) {\n        $event.preventDefault();\n        $scope.loading(true);\n        $http.post(home('auth/register'), $scope.data)\n            .success(function (response) {\n                $scope.loading(false);\n                $scope.mode = 1;\n                $scope.result = response;\n            })\n\n            \n            .error(function (response, status) {\n                $scope.loading(false);\n                if (status == 422) {\n                    $scope.server_error = response;\n                }\n                else if (status == 500 || 400) {\n                    $scope.mode = 2;\n                }\n            });\n    };\n    $scope.loading = function ($mode) {\n        $scope.preloader = $mode;\n    }\n});\n\n\napp.controller('LoginCtrl', function ($scope, $http) {\n    $scope.data = {};\n\n    $scope.submit = function ($event) {\n        $scope.loading(true);\n        $scope.server_error = $scope.unauthorized = $scope.not_acceptable = undefined;\n        $event.preventDefault();\n        $http.post(home('auth/login'), $scope.data)\n            .success(function (response) {\n                if (response['result'] == true) {\n                    window.location.href = response['redirectPath'];\n                }\n            })\n            .error(function (response, status) {\n                $scope.loading(false);\n                if (status == 422) {\n                    $scope.server_error = response;\n                } else if (status == 401) {\n                    $scope.unauthorized = true;\n                } else if (status == 406) {\n                    $scope.not_acceptable = true;\n                }\n            });\n    };\n\n    $scope.loading = function ($mode) {\n        $scope.preloader = $mode;\n    }\n});\n",
    "app.directive('useNgTable', function (NgTableParams, $http, $window) {\n    function link(s, elm, attrs) {\n        if (!s.n) {\n            s.n = {};\n        }\n\n        if (!(s.n.filter)) {\n            s.n.filter = {};\n        }\n\n        if (!s.n.cols) {\n            s.n.cols = {};\n        }\n\n        s.n.filter.$items = [];\n        s.n.filter.adder = {};\n        s.n.btnFilter = [];\n\n\n        s.n.filter.showFS = function () {\n            s.n.filter.showFilterSelect = true;\n        };\n\n        s.n.isActiveBtnFilter = function (id) {\n            return _.indexOf(s.n.btnFilter, id) != -1;\n        };\n\n        s.n.toggleBtnFilter = function (id) {\n            if (s.n.isActiveBtnFilter(id)) {\n                s.n.btnFilter = _.without(s.n.btnFilter, id);\n            } else {\n                s.n.btnFilter.push(id);\n            }\n            s.n.serv();\n        };\n\n        s.n.filter.hideFS = function () {\n            s.n.filter.showFilterSelect = false;\n        };\n\n        s.n.filter.changeCritical = function (item) {\n            switch (item.cr) {\n                case 'or':\n                    item.cr = 'and';\n                    break;\n                case 'and':\n                    item.cr = 'not';\n                    break;\n                case 'not':\n                    item.cr = 'or';\n                    break;\n            }\n        };\n\n        s.n.filter.cr = {\n            'or': {title: '????', icon: 'device_hub'},\n            'and': {title: '??', icon: 'all_inclusive'},\n            'not': {title: '??????????', icon: 'not_interested'},\n        };\n\n\n        s.n.offProgress = function () {\n            s.n.progress = false;\n        };\n\n        s.n.onProgress = function () {\n            s.n.progress = true;\n        };\n\n        var _post = function (params) {\n            s.n.onProgress();\n            return $http.post(home(s.n.ngtRoute), s.n.servData({\n                page: params.page(),\n                count: params.count(),\n                sorting: params.sorting()\n            })).error(function () {\n                s.n.offProgress();\n            }).then(function (response) {\n                s.n.offProgress();\n                if (response.status == 200) {\n                    params.total(response.data.total);\n                    return response.data.rows;\n                }\n            });\n        };\n\n        s.n.filter.addFilter = function () {\n            var _t = _.findWhere(s.n.filter.$data, {value: s.n.filter.mdSelect});\n\n            s.n.filter.$items.push({\n                title: _t.title,\n                value: _t.value,\n                type: _t.type,\n                select: _t.select,\n                cr: 'and'\n            });\n\n            s.n.filter.mdSelect = undefined;\n            s.n.filter.showFilterSelect = false;\n        };\n\n        s.n.filter.when = function (item) {\n            item.when++;\n            if (item.when == 4) {\n                item.when = 1;\n            }\n        };\n        s.n.filter.removeItem = function (item) {\n            s.n.filter.$items = _.without(s.n.filter.$items, _.findWhere(s.n.filter.$items, {value: item.value}));\n        };\n        s.n.filter.adder.isOpen = false;\n\n        s.n.tableParams = new NgTableParams({\n            count: 5\n        }, {\n            counts: [5, 10, 20],\n            paginationMaxBlocks: 10,\n            paginationMinBlocks: 2,\n            getData: _post\n        });\n\n        s.n.serv = function () {\n            s.n.tableParams.reload();\n        };\n\n        s.n.servData = function (params) {\n            params = params || {};\n            if (s.n.postData) {\n                params = _.extend(params, s.n.postData());\n            }\n            if (s.n.btnFilter) {\n                params = _.extend(params, {btnFilter: s.n.btnFilter});\n            }\n            return _.extend(params, {\n                cols: s.n.getCols(),\n                filter: s.n.filter.$items,\n                ngtRoute: s.n.ngtRoute\n            });\n        };\n\n        s.n.getCols = function () {\n            var tmp = [];\n            _.each(s.n.cols, function (item, key) {\n                if (_.isBoolean(item)) {\n                    if (item)\n                        tmp.push(key);\n                } else {\n                    for (var i in item) {\n                        if (item[i]) {\n                            tmp.push(key + '.' + i);\n                        }\n                    }\n                }\n            });\n            return tmp;\n        };\n        s.n.exportExcel = function () {\n            var params = s.n.tableParams;\n            var _export = s.n.servData({\n                page: params.page(),\n                count: params.count(),\n                sorting: params.sorting(),\n                excelExport: true\n            });\n            $http.post(home(_export.ngtRoute), _export).success(function (response) {\n                if (response && response.file) {\n                    window.location = home('console/excel-file?url=' + response.file);\n                }\n            });\n        };\n\n\n        s.n.print = function () {\n            var params = s.n.tableParams;\n            var _export = s.n.servData({\n                page: params.page(),\n                count: params.count(),\n                sorting: params.sorting(),\n                exportPrint: true\n            });\n            console.log('100', 100);\n            var w = $window.open(\"\", '_blank');\n            $http.post(home(_export.ngtRoute), _export).success(function (response) {\n                console.log('window', window);\n                w.location.href = home('console/print-table');\n            });\n        };\n\n        s.n.exportPDF = function () {\n            var params = s.n.tableParams;\n            var _export = s.n.servData({\n                page: params.page(),\n                count: params.count(),\n                sorting: params.sorting(),\n                excelExport: true,\n                pdfExport: true\n            });\n            $http.post(home(_export.ngtRoute), _export).success(function (response) {\n                if (response && response.file) {\n                    window.location = home('console/excel-file?url=' + response.file);\n                }\n            });\n        };\n\n        s.n.reload = function () {\n            s.n.tableParams.reload();\n        };\n\n    }\n\n    return {\n        restrict: 'A',\n        link: link,\n        scope: {\n            n: '=ngtModel'\n        }\n    }\n});",
    "app.controller('ConstCtrl', function ($scope, htp, notify, $mdDialog) {\n    var _this = $scope;\n    var CONST = function ($set, $get) {\n        var that = this;\n        this.items = [];\n        this.errorItems = undefined;\n        this.loading = false;\n        this.set = $set;\n        this.get = $get;\n        this.init = function () {\n            this.loading = true;\n            htp(home(this.get)).then(function (res) {\n                if (res && res.result == true) {\n                    that.items = res.data;\n                }\n            }).error(function (res, sts) {\n                if (sts == 422) {\n                    that.errorItems = res;\n                }\n            }).after(function () {\n                that.loading = false;\n            });\n        };\n        this.add = function () {\n            that.errorItems = undefined;\n            htp(home(this.set), {name: this.name, title: this.title, price: this.price}).then(function (res) {\n                that.init();\n                that.title = undefined;\n                that.name = undefined;\n                that.price = undefined;\n            }).error(function (res, sts) {\n                if (sts == 422) {\n                    that.errorItems = res;\n                }\n            }).after(function () {\n                that.loading = false;\n            });\n        };\n        this.remove = function (ev, item, tbl_name) {\n            var id = item.id;\n            var index = _this.packet_type.items.indexOf(item);\n            _this.destroy = function (id, where) {\n                htp(home('console/destroy'), {id: id, where: where})\n                    .then(function (response) {\n                        _this.packet_type.items.splice(index, 1);\n                        notify('warning', '?????????? ???????? ?????? ???? ???????????? ?????? ????');\n\n                    });\n            };\n            var desc = trans('message.desc_delete');\n            var confirm = $mdDialog.confirm()\n                .title(trans('message.title_delete'))\n                .textContent(desc)\n                .ariaLabel('?????? ??????????')\n                .targetEvent(ev)\n                .ok('??????')\n                .cancel('??????');\n            $mdDialog.show(confirm).then(function () {\n                _this.destroy(id, tbl_name);\n            }, function () {\n\n            });\n        };\n        this.init();\n    };\n    _this.flower = new CONST('console/manage/set-const-flower', 'console/manage/get-const-flower');\n    _this.pack = new CONST('console/manage/set-const-pack', 'console/manage/get-const-pack');\n    _this.cost = new CONST('console/manage/set-const-cost', 'console/manage/get-const-cost');\n    _this.user_type = new CONST('console/manage/set-const-user-type', 'console/manage/get-const-user-type');\n    _this.packet_type = new CONST('console/manage/set-const-packet-type', 'console/manage/get-const-packet-type');\n});",
    "app.controller('CostCtrl', function ($scope, htp, notify) {\n    var _this = $scope;\n    _this.tbl = {};\n    _this.uidOpt = {};\n    _this.parentOpt = {};\n    _this.show_form = false;\n    _this.submit = function () {\n        _this.loading = true;\n        _this.Form.$setValidity('loading', false);\n        htp(home('console/cost/add'), _this.data).then(function (res) {\n            notify('info', '?????? ???? ???????????? ???? ?????? ????????');\n            _this.data = {};\n            _this.uidOpt.searchText = undefined;\n            _this.parentOpt.searchText = undefined;\n            _this.Form.$setPristine();\n            \n            _this.tbl.reload();\n        }).error(function (res, sts) {\n            if (sts == 422) {\n                _this.errorItem = res;\n            }\n        }).after(function () {\n            _this.loading = false;\n            _this.Form.$setValidity('loading', true);\n        });\n    };\n});",
    "app.controller('CustomerAddCtrl', function ($scope, htp, $controller, notify, $rootScope) {\n    $controller('SubmitController', {$scope: $scope});\n    var _this = $scope;\n    _this.submiterUrl = 'console/customer/add';\n    _this.submiterName = '??????????';\n\n    if (_this.edit_mode) {\n        _this.data = _this.dt;\n        _.each(_this.data.user_info, function (item, key) {\n            if (!_this.data.hasOwnProperty(key)) {\n                _this.data[key] = item;\n            }\n        });\n    }\n    _this.afterSuccess = function (response) {\n        if (response.id)\n            notify('info', '???? ?????????? ?????? ?????? :' + response.id);\n    };\n\n\n    var GROUP = function () {\n        this.text = undefined;\n        this.parent = undefined;\n        this.all = [];\n        var that = this;\n        this.init = function () {\n            htp(home('console/customer/get-groups')).then(function (response) {\n                if (response && response.result == true) {\n                    that.all = response.data;\n                }\n            });\n        };\n        this.add = function () {\n            this.loading = true;\n            var that = this;\n            that.errorItem = undefined;\n            htp(home('console/customer/add-group'), {\n                title: this.text,\n                parent: (this.parent) ? this.parent.id : null\n            }).then(function (response) {\n                that.text = '';\n                that.init();\n            }).error(function (response, sts) {\n                if (sts == 422) {\n                    that.errorItem = response;\n                }\n            }).after(function (response) {\n                that.loading = false;\n            });\n        };\n        this.init();\n    };\n    _this.group = new GROUP();\n\n    _this.export = function () {\n        var arr = _this.findDeep(_this.group.all);\n        _this.data.groups = _.map(arr, function (val) {\n            return val.id;\n        });\n        return _this.data;\n    };\n\n    _this.findDeep = function (items) {\n        var $export = [];\n\n        function traverse(value) {\n            _.forEach(value, function (val) {\n                if (_.isObject(val) && val.hasOwnProperty('child')) {\n                    traverse(val.child);\n                }\n                if (val.has && val.has == true) {\n                    $export.push(val);\n                }\n            });\n        }\n\n        traverse(items);\n        return $export;\n    };\n\n    _this.$watch('customer', function (n) {\n        if (n) {\n            $rootScope.$emit('order:customer', n);\n        }\n    });\n\n    _this.getData = function () {\n        _this.data = undefined;\n        htp(home('console/order/get-data'), {customer: _this.customer}).then(function (res) {\n            _this.data = res\n        }).error(function () {\n\n        });\n    }\n});",
    "app.controller('CustomerListCtrl', function ($scope) {\n    var _this = $scope;\n    _this.tbl = {};\n\n});",
    "app.controller('FlowerAddCtrl', function ($scope, htp, $controller) {\n    $controller('SubmitController', {$scope: $scope});\n    var _this = $scope;\n    _this.submiterUrl = 'console/flower/add';\n    _this.submiterName = '????';\n\n    if (_this.edit_mode) {\n        _this.data = _this.dt;\n    }\n    _this.data = {};\n    _this.data.composit = [];\n    var COMP = function () {\n        this.disabled = false;\n        this.flower = this.image = undefined;\n        this.add = function () {\n            _this.data.composit.push({\n                flower: this.flower,\n                image: this.image\n            });\n            this.flower = this.image = undefined;\n            this.flowerOpt.searchText = undefined;\n            this.flowerOpt.selectedItem = undefined;\n        };\n\n        this.remove = function ($index) {\n            _this.data.composit = _.without(_this.data.composit, _this.data.composit[$index]);\n        };\n    };\n    _this.afterSuccess = function () {\n        _this.data = {};\n        _this.data.composit = [];\n        _this.comp = new COMP();\n    };\n    _this.comp = new COMP();\n\n    var Fls = function ($name) {\n        this.errorUploading = undefined;\n        this.file = undefined;\n        this.success = undefined;\n        this.readyUpload = undefined;\n        this.progress = undefined;\n        this.name = $name;\n        this.has = undefined;\n        this.finish = true;\n        this.url = undefined;\n        this.clear = function () {\n            this.errorUploading = this.readyUpload = this.file = this.success = this.progress = undefined;\n        };\n\n        this.clearError = function () {\n            this.errorUploading = undefined;\n        };\n\n        this.__submit = function () {\n            _this._upload(this);\n        };\n\n        this.init = function () {\n            this.has = true;\n            this.finish = false;\n        };\n    };\n\n\n    _this._upload = function (fls) {\n        fls.clearError();\n        fls.uploading = true;\n        Upload.upload({\n            url: home('console/flower/upload-flower-image'),\n            data: {file: fls.file, type: fls.name}\n        }).then(function (resp) {\n            fls.uploading = false;\n            fls.clear();\n            fls.success = true;\n            fls.finish = true;\n            fls.url = resp.data.url;\n            var d = new Date();\n            _this.data.personal.url = resp.data.url + '?ver=' + d.getTime();\n        }, function (resp) {\n            fls.errorUploading = true;\n            fls.file = undefined;\n            fls.uploading = false;\n            fls.progress = undefined;\n        }, function (evt) {\n            fls.progress = parseInt(100.0 * evt.loaded / evt.total);\n        });\n    };\n\n    _this.data.flower_picture = new Fls('flower_picture');\n\n});\n\n\napp.controller('FlowerListCtrl', function ($scope, $mdDialog, htp) {\n    var _this = $scope;\n    _this.tbl = {};\n    // _this.showDialog = function (row, ev) {\n    //     console.log(row);\n    //     var dialog = $mdDialog.show({\n    //         controller: function ($scope, $controller, dt, $mdDialog) {\n    //             $scope.dt = dt;\n    //             $scope.edit_mode = true;\n    //             $scope.data = row;\n    //             $scope.hide = function () {\n    //                 $mdDialog.hide();\n    //             };\n    //             $scope.cancel = function () {\n    //                 $mdDialog.cancel();\n    //             };\n    //             $scope.tbl = {};\n    //             $scope.tbl.postData = function () {\n    //                 return {\n    //                     uid: dt.id\n    //                 }\n    //             };\n    //         },\n    //         templateUrl: home('console/flower/data'),\n    //         parent: angular.element(document.body),\n    //         targetEvent: ev,\n    //         clickOutsideToClose: true,\n    //         locals: {\n    //             dt: row\n    //         },\n    //         fullscreen: $scope.customFullscreen // Only for -xs, -sm breakpoints.\n    //     })\n    //         .then(function (answer) {\n    //\n    //         });\n    // };\n});\napp.controller('FlowerEditCtrl', function ($scope, htp, $controller) {\n    var _this = $scope;\n    htp(home('console/flower/get-edit-flower-data'), {id: _this.dt.id}).then(function (resposnne) {\n        _this.data = resposnne;\n\n    });\n});",
    "app.controller('FlowerPackageAddCtrl', function ($scope, htp, $controller) {\n    $controller('SubmitController', {$scope: $scope});\n    var _this = $scope;\n    _this.submiterUrl = 'console/flower_package/add';\n    _this.submiterName = '????';\n\n    if (_this.edit_mode) {\n        _this.data = _this.dt;\n    }\n    _this.data = {};\n    _this.data.composit = [];\n    _this.data.combine_arr = [];\n    _this.data.tarkibs = [];\n    _this.flowers_arr = [];\n    _this.data.checkedCombines = [];\n\n    _this.toggleCheck = function (combine) {\n        if (_this.data.checkedCombines.indexOf(combine) === -1) {\n            _this.data.checkedCombines.push(combine);\n        } else {\n            _this.data.checkedCombines.splice(_this.data.checkedCombines.indexOf(combine), 1);\n        }\n    };\n\n    var COMP = function () {\n        this.disabled = false;\n        this.flower = this.flowers  = this.count = undefined;\n        htp(home('console/flower_package/flowers-list')).then(function (response) {\n            _this.data.flowers = response;\n            angular.forEach(response, function (value, key) {\n                _this.flowers_arr[value.id] = value;\n            });\n        });\n        this.add = function () {\n            _this.data.composit.push({\n                flower: this.flower,\n                count: this.count\n            });\n            this.flower = this.count = undefined;\n        };\n\n        this.remove = function ($index) {\n            _this.data.composit = _.without(_this.data.composit, _this.data.composit[$index]);\n        };\n\n        this.combine = function(){\n            var flowers_variations = [];\n            _this.data.composit.forEach(function (t) {\n                var flower_v = [];\n                _this.flowers_arr[t.flower].variations.forEach(function (s) {\n                    flower_v.push(_this.flowers_arr[t.flower].name + ' ' + s.color);\n                });\n                if(flower_v.length > 0){\n                    flowers_variations.push(flower_v);\n                }\n            });\n            var result = [\"\"];\n            flowers_variations.forEach(function(arr){\n                var tmp = [];\n                arr.forEach(function(el){\n                    result.forEach(function(curr){\n                        tmp.push(curr + el + ' - ');\n                    });\n                });\n                result = tmp;\n            });\n            _this.data.combine_arr = result;\n        };\n    };\n    _this.afterSuccess = function () {\n        _this.data = {};\n        _this.data.composit = [];\n        _this.comp = new COMP();\n    };\n    _this.comp = new COMP();\n});\n\n\napp.controller('FlowerPackageListCtrl', function ($scope, $mdDialog, htp) {\n    var _this = $scope;\n    _this.tbl = {};\n    _this.showDialog = function (row, ev) {\n        var dialog = $mdDialog.show({\n            controller: function ($scope, $controller, dt, $mdDialog) {\n                $scope.dt = dt;\n                $scope.edit_mode = true;\n                $scope.data = row;\n                $scope.hide = function () {\n                    $mdDialog.hide();\n                };\n                $scope.cancel = function () {\n                    $mdDialog.cancel();\n                };\n                $scope.tbl = {};\n                $scope.tbl.postData = function () {\n                    return {\n                        uid: dt.id\n                    }\n                };\n            },\n            templateUrl: home('console/flower_package/data'),\n            parent: angular.element(document.body),\n            targetEvent: ev,\n            clickOutsideToClose: true,\n            locals: {\n                dt: row\n            },\n            fullscreen: $scope.customFullscreen // Only for -xs, -sm breakpoints.\n        })\n            .then(function (answer) {\n\n            });\n    };\n});",
    "app.controller('FlowerPacketAddCtrl', function ($scope, htp, $controller) {\n    $controller('SubmitController', {$scope: $scope});\n    var _this = $scope;\n    _this.submiterUrl = 'console/flower_packet/add';\n    _this.submiterName = '????????';\n\n    if (_this.edit_mode) {\n        _this.data = _this.dt;\n    }\n    _this.data = {};\n    _this.data.composit = [];\n    _this.data.combine_arr = [];\n    _this.data.tarkibs = [];\n    _this.flowers_arr = [];\n    _this.data.checkedCombines = [];\n\n    _this.toggleCheck = function (combine) {\n        if (_this.data.checkedCombines.indexOf(combine) === -1) {\n            _this.data.checkedCombines.push(combine);\n        } else {\n            _this.data.checkedCombines.splice(_this.data.checkedCombines.indexOf(combine), 1);\n        }\n    };\n\n    var COMP = function () {\n        this.disabled = false;\n        this.package = this.packages = undefined;\n        htp(home('console/flower_packet/packages-list')).then(function (response) {\n            _this.data.packages = response;\n            _this.packages_arr = [];\n            for(var i = 0; i < response.length; i++){\n                _this.packages_arr[response[i].id] = response[i];\n            }\n        });\n        this.add = function () {\n            _this.data.composit.push({\n                package: this.package\n            });\n            this.package = undefined;\n        };\n\n        this.remove = function ($index) {\n            _this.data.composit = _.without(_this.data.composit, _this.data.composit[$index]);\n        };\n    };\n    _this.afterSuccess = function () {\n        _this.data = {};\n        _this.data.composit = [];\n        _this.comp = new COMP();\n    };\n    _this.comp = new COMP();\n});\n\n\napp.controller('FlowerPacketListCtrl', function ($scope, $mdDialog, htp) {\n    var _this = $scope;\n    _this.tbl = {};\n    _this.showDialog = function (row, ev) {\n        console.log(row);\n        var dialog = $mdDialog.show({\n            controller: function ($scope, $controller, dt, $mdDialog) {\n                $scope.dt = dt;\n                $scope.edit_mode = true;\n                $scope.data = row;\n                $scope.hide = function () {\n                    $mdDialog.hide();\n                };\n                $scope.cancel = function () {\n                    $mdDialog.cancel();\n                };\n                $scope.tbl = {};\n                $scope.tbl.postData = function () {\n                    return {\n                        uid: dt.id\n                    }\n                };\n            },\n            templateUrl: home('console/flower_packet/data'),\n            parent: angular.element(document.body),\n            targetEvent: ev,\n            clickOutsideToClose: true,\n            locals: {\n                dt: row\n            },\n            fullscreen: $scope.customFullscreen // Only for -xs, -sm breakpoints.\n        })\n            .then(function (answer) {\n\n            });\n    };\n});",
    "app.controller('CustomerGroupCtrl', function ($scope, htp , notify) {\n    var _this = $scope;\n    _this.chipOpt = {};\n    _this.chipCusOpt = {};\n    _this.data = {};\n    _this.data.groups = [];\n    _this.data.customers = [];\n\n    _this.submit = function () {\n        _this.loading = true;\n        htp(home('console/customer/set-groups'), _this.data).then(function (response) {\n            notify('info', '???????????? ???? ???????????? ?????????? ??????????');\n            _this.data.groups = [];\n            _this.data.customers = [];\n        }).after(function (response) {\n            _this.loading = false;\n        }).error(function (response, sts) {\n            if (sts == 422) {\n                _this.errorItem = response;\n            }\n        });\n    };\n    var GROUP = function () {\n        this.text = undefined;\n        this.parent = undefined;\n        this.all = [];\n        var that = this;\n        this.init = function () {\n            htp(home('console/customer/get-groups')).then(function (response) {\n                if (response && response.result == true) {\n                    that.all = response.data;\n                }\n            });\n        };\n        this.add = function () {\n            this.loading = true;\n            var that = this;\n            that.errorItem = undefined;\n            htp(home('console/customer/add-group'), {\n                title: this.text,\n                parent: (this.parent) ? this.parent.id : null\n            }).then(function (response) {\n                that.text = '';\n                that.init();\n            }).error(function (response, sts) {\n                if (sts == 422) {\n                    that.errorItem = response;\n                }\n            }).after(function (response) {\n                that.loading = false;\n            });\n        };\n        this.init();\n    };\n    _this.group = new GROUP();\n\n});",
    "app.controller('LogCtrl', function ($scope, htp) {\n    var _this = $scope;\n    _this.tbl = {};\n});",
    "app.controller('OrderPageCtrl', function ($scope, htp, $rootScope) {\n    var _this = $scope;\n    // _this.elm = $('#acrd');\n    // _this.elm.??????();\n    $('.menu .item').tab();\n    _this._active = 1;\n    _this.can = {};\n    _this.active = function ($index) {\n        _this._active = $index;\n        var _c = {\n            0: 'customer-tab',\n            1: 'order-tab',\n            2: 'pay-tab'\n        };\n        $('#' + _c[$index]).trigger('click');\n        // _this.elm.accordion('open', $index);\n    };\n\n    $rootScope.$on('order:customer', function (data, dt) {\n        _this.can.customer = dt;\n    });\n\n    $rootScope.$on('order:order', function (data, dt) {\n        _this.can.order = dt;\n    });\n\n    $rootScope.$on('order:pay', function (data, dt) {\n        _this.can.pay = dt;\n    });\n\n});\n\n\napp.controller('OrderAddNewCtrl', function ($scope, htp, $rootScope, notify) {\n    var _this = $scope;\n    _this.data = {};\n    _this.prc = {};\n    _this.pay = {};\n    _this.data.new_orders = [];\n    _this.data.orders = [];\n    _this.init = function () {\n        $('.ui.accordion').accordion();\n    };\n    _this.type = function (item, $index) {\n        item.type = $index;\n    };\n    angular.module('tabsDemoDynamicHeight', ['ngMaterial']);\n\n\n\n\n    $('.ui.accordion').accordion();\n    $rootScope.$on('order:customer', function (data, dt) {\n        _this.data.customer = dt;\n        htp(home('console/order/get-prc'), {cid: _this.data.customer.id}).then(function (res) {\n            _this.data.orders = res;\n\n        });\n    });\n\n    _this.payType = function (item, $index) {\n        item.pay_type = $index;\n        // _this.loading = true;\n        // htp(home('console/order/send-email'), _this.data).then(function (res) {\n        //     notify('success', '?????????????? ???? ???????????? ?????? ??????????')\n        // }).error(function (res, sts) {\n        //     if (sts == 422) {\n        //         _this.errorItems = res;\n        //     }\n        // }).after(function (res) {\n        //     _this.loading = false;\n        // });\n    };\n    _this.addOrder = function () {\n        _this.data.new_orders.push({type: 1, week: 1, time: 1, w: 1, total: 1});\n        $('.ui.accordion').accordion();\n    };\n\n    _this.removenewOrder = function (item) {\n        _this.data.new_orders = _.without(_this.data.new_orders, item);\n    };\n\n\n\n    // _this.$watch('pay.type',function (n) {\n    //    if(n){\n    //        $rootScope.$emit('order:pay' , n);\n    //    } else{\n    //        $rootScope.$emit('order:pay:not' , n);\n    //    }\n    // });\n\n\n    _this.weekChange = function (item, index) {\n        item.week = index;\n    };\n\n\n    _this.wChange = function (item, index) {\n        item.w = index;\n    };\n    _this.timeChange = function (item, index) {\n        item.time = index;\n\n    };\n\n    _this.calcPrice = function (item) {\n        // item.price = _this.prices[item.prc];\n        // return item.total * item.price * item.w;\n        if (item.amount) {\n            return item.amount;\n\n        }\n    };\n\n    _this.week = [\n        {\n            id: 1,\n            title: '????????'\n        },\n        {\n            id: 2,\n            title: '????????????'\n        },\n        {\n            id: 3,\n            title: '????????????'\n        },\n        {\n            id: 4,\n            title: '???? ????????'\n        },\n        {\n            id: 5,\n            title: '????????????????'\n        },\n        {\n            id: 6,\n            title: '?????? ????????'\n        },\n        {\n            id: 7,\n            title: '????????'\n        },\n    ];\n    _this.time = [\n        {\n            id: 1,\n            title: '9-12'\n        },\n        {\n            id: 2,\n            title: '12-15'\n        },\n        {\n            id: 3,\n            title: '15-18'\n        },\n        {\n            id: 4,\n            title: '18-21'\n        }\n    ];\n    _this.w = [\n        {\n            id: 1,\n            title: '???? ??????'\n        },\n        {\n            id: 3,\n            title: '???? ????????'\n        },\n        {\n            id: 6,\n            title: '???? ????????'\n        },\n        {\n            id: 12,\n            title: '???????????? ????????'\n        }\n    ];\n\n\n    _this.submit = function () {\n        _this.loading = true;\n        htp(home('console/order/submit'), _this.data).then(function (res) {\n            notify('success', '?????????????? ???? ???????????? ?????? ??????????')\n        }).error(function (res, sts) {\n            if (sts == 422) {\n                _this.errorItems = res;\n            }\n        }).after(function (res) {\n            _this.loading = false;\n        });\n    }\n\n});\n\n\napp.directive('useDropdown', function ($timeout) {\n    function link(s, elm, attr, ngModel) {\n        s.hasMultiple = $(elm).hasClass('multiple');\n        $(elm).dropdown({\n            onChange: function (value, text, $choise) {\n                s.$apply(function () {\n                    if (!s.hasMultiple) {\n                        ngModel.$setViewValue(value);\n                    } else {\n                        ngModel.$setViewValue(value.split(','));\n                    }\n                });\n            },\n            message: {\n                addResult: 'Add <b>{term}</b>',\n                count: '{count} ???????????? ??????',\n                maxSelections: 'Max {maxCount} selections',\n                noResults: '?????????? ???? ???????? ??????!'\n            }\n        });\n        ngModel.$render = function () {\n            $timeout(function () {\n                if (ngModel.$viewValue != undefined) {\n                    $(elm).dropdown('set selected', ngModel.$viewValue);\n                } else {\n                    $(elm).dropdown('restore defaults');\n                }\n            });\n        }\n\n    }\n\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        link: link,\n    };\n});\n\n\napp.directive('useSearch', function ($timeout) {\n    function link(scope, elm, attr, ngModel) {\n        var xsrf = $('meta[name=\"csrf-token\"]').attr('content');\n        $(elm).search({\n            apiSettings: {\n                method: 'POST',\n                minCharacters: 3,\n                beforeSend: function (settings, param) {\n                    settings.data = {\n                        query: settings.urlData.query\n                    };\n                    return settings;\n                },\n                onResponse: function (response) {\n                    return response;\n                },\n                url: home('console/order/customer-search'),\n                beforeXHR: function (xhr) {\n                    xhr.setRequestHeader('X-CSRF-TOKEN', xsrf);\n                },\n            },\n            onSelect: function (result, response) {\n                if (attr.key) {\n                    ngModel.$setViewValue(result[attr.key]);\n                } else {\n                    ngModel.$setViewValue(result);\n                }\n            },\n            templates: {\n                message: function (message, type) {\n                    if (type == 'empty') {\n                        return '<div class=\"p-md\">?????? ?????????? ???? ???????? ??????!</div>';\n                    }\n                    return message;\n                }\n            },\n\n        });\n        ngModel.$render = function () {\n            $timeout(function () {\n                $(elm).search('set value', ngModel.$viewValue);\n            });\n        };\n        scope.useSearch = {};\n    }\n\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        scope: {\n            useSearch: '='\n        },\n        link: link\n    };\n});\n\napp.controller('OrderListDayCtrl', function ($scope) {\n    $scope.tbl = {};\n});",
    "app.controller('OrderListCtrl', function ($scope, htp, $mdDialog, NgTableParams) {\n    var _this = $scope;\n    _this.tbl = {};\n\n\n    _this.setVisitor = function (row) {\n        row.visitor_loading = true;\n        htp(home('console/order/set-visitor'), {id: row.id}).then(function (response) {\n            _this.tbl.reload();\n        }).after(function () {\n            row.visitor_loading = false;\n        });\n    };\n\n    _this.setSender = function (row) {\n        row.sender_loading = true;\n        htp(home('console/order/set-sender'), {id: row.id}).then(function (response) {\n            _this.tbl.reload();\n        }).after(function () {\n            row.sender_loading = false;\n        });\n    };\n\n    _this.setSts = function (row) {\n        row.sts_loading = true;\n        htp(home('console/order/set-sts'), {id: row.id, sts: row.sts}).then(function (response) {\n            _this.tbl.reload();\n        }).after(function () {\n            row.sts_loading = false;\n        });\n    };\n\n    _this.init = function (row) {\n        row.extra_loading = true;\n        row.order_items = undefined;\n        htp(home('console/order/get-order-items'), {id: row.id}).then(function (response) {\n            row.order_items = response;\n        }).after(function () {\n            row.extra_loading = false;\n        });\n    };\n    _this.editProductListDialog = function (ev, row) {\n        var dialog = $mdDialog.show({\n                controller: function ($scope, $controller, row, id) {\n                    $scope.data = row;\n                    $scope.edit_mode = true;\n                    $scope.hide = function () {\n                        $mdDialog.hide();\n                    };\n                    $scope.cancel = function () {\n                        $mdDialog.cancel();\n                    };\n                    $scope.editBtnDialog = function () {\n                        $scope.preloader = true;\n                        htp(home('console/order/edit-product-list'), {\n                            id: id,\n                            data: $scope.data\n                        }).then(function (response) {\n                            $scope.preloader = false;\n                            $mdDialog.hide();\n                            _this.init(row);\n                            _this.tbl.reload();\n                        });\n                    };\n                    var __this = $scope;\n                    __this.data.order_item = [];\n                    _.each(__this.data.order_items, function (item) {\n                        __this.data.order_item.push(angular.extend(item, {value: item.product_name.title}));\n                    });\n                    $controller('OrderProductTable', {$scope: $scope});\n                    __this.$watch('data.order_item', function (n) {\n                        console.log('n', n);\n                    }, true);\n\n                },\n                templateUrl: home('console/order/product-list-edit'),\n                parent: angular.element(document.body),\n                targetEvent: ev,\n                clickOutsideToClose: true,\n                locals: {\n                    row: row,\n                    id: row.id\n                },\n                fullscreen: $scope.customFullscreen // Only for -xs, -sm breakpoints.\n            })\n            .then(function (answer) {\n\n            });\n    };\n\n});\n\napp.controller('OrderProductTable', function ($scope, htp, NgTableParams) {\n    var _this = $scope;\n    if (!_this.data) {\n        _this.data = {};\n        _this.data.order_item = [];\n    }\n    _this.tableParams = new NgTableParams({}, {\n        dataset: _this.data.order_item,\n        counts: [] // hides page sizes\n    });\n    _this.prc = {};\n    _this.prc.remove = function ($index) {\n        _this.data.order_item = _.without(_this.data.order_item, _this.data.order_item[$index]);\n        _this.tableParams = new NgTableParams({}, {\n            dataset: _this.data.order_item,\n            counts: [] // hides page sizes\n        });\n    };\n    _this.tableParams.show_filter = false;\n    _this.addProduct = function (item) {\n        if (!item.total) {\n            item.total = 1;\n        }\n        _this.data.order_item.push(item);\n        _this.tableParams.reload();\n        _this.prc.itemOpt = {};\n        _this.prc.item = {};\n    };\n    _this.$watch('prc.item.id', function (n) {\n        if (n) {\n            _this.addProduct(_this.prc.item);\n        }\n    });\n\n    _this.$watch('data.order_item', function (n) {\n        if (n) {\n            _this.data.total = 0;\n            for (var i in n) {\n                _this.data.total += parseInt(n[i].price) * parseInt(n[i].total);\n            }\n        }\n    }, true);\n});\n\napp.controller('OrderAddCtrl', function ($scope, htp, $controller, NgTableParams) {\n    $controller('OrderProductTable', {$scope: $scope});\n    $controller('SubmitController', {$scope: $scope});\n    var _this = $scope;\n    _this.submiterUrl = 'console/order/add';\n    _this.submiterName = '????????????';\n\n    if (_this.edit_mode) {\n        _this.data = _this.dt;\n    }\n    if (!_this.data) {\n        _this.data = {};\n    }\n    _this.data.when = 1;\n    _this.data.total = 0;\n    _this.afterSuccess = function () {\n        // window.location.reload();\n    };\n    _this.data.sts = -1;\n});\n\napp.controller('OrderEditCtrl', function ($scope, htp) {\n    var _this = $scope;\n    _this.data = _this.dt;\n    _this.customer = {};\n    _this.visitor = {};\n    _this.sender = {};\n    _this.customer.itemOpt = {};\n    _this.visitor.itemOpt = {};\n    _this.sender.itemOpt = {};\n    htp(home('console/order/get-edit-data'), {id: _this.dt.id})\n        .then(function (response) {\n            _this.data = response;\n\n            if (_this.data.customer) {\n                _this.customer.itemOpt.searchText = _this.data.customer.value;\n            }\n\n            if (_this.data.visitor) {\n                _this.visitor.itemOpt.searchText = _this.data.visitor.value;\n            }\n\n            if (_this.data.sender) {\n                _this.sender.itemOpt.searchText = _this.data.sender.value;\n            }\n        })\n        .error(function (response, sts) {\n            if (sts == 422) {\n                _this.errorItem = response;\n            }\n        })\n        .after(function () {\n\n        });\n});",
    "app.controller('OrderReportCtrl', function ($scope, htp) {\n    var _this = $scope;\n    var REPORT = function (url) {\n        this.url = url;\n        this.date = undefined;\n        var that = this;\n        if (!this.chart) {\n            this.chart = {};\n        }\n        this.load = function () {\n            this.loading = true;\n            htp(home(this.url), {date: this.date}).then(function (res) {\n                that.dt = res.dt;\n                that.date = res.date;\n                that.chart.load();\n            }).error(function (res, sts) {\n                if (sts == 422) {\n                    that.errorItem = res;\n                }\n            }).after(function () {\n                that.loading = false;\n            });\n        };\n        this.chart.send = function () {\n            return angular.extend(that.dt, {date: that.date});\n        };\n        this.load();\n    };\n    _this.day = new REPORT('console/order/get-day-report-data');\n    _this.week = new REPORT('console/order/get-week-report-data');\n    _this.month = new REPORT('console/order/get-month-report-data');\n\n    _this.week.chart.options =\n    {\n        scales: {\n            yAxes: [{\n                stacked: true,\n                ticks: {\n                    stepSize: 1\n                }\n            }]\n        }\n    };\n\n    _this.month.chart.options =\n    {\n        scales: {\n            yAxes: [{\n                stacked: true,\n                ticks: {\n                    stepSize: 1\n                }\n            }]\n        }\n    };\n\n});",
    "app.controller('ProductAddCtrl', function ($scope, htp, $controller) {\n    $controller('SubmitController', {$scope: $scope});\n    var _this = $scope;\n    _this.submiterUrl = 'console/product/add';\n    _this.submiterName = '??????????';\n\n    if (_this.edit_mode) {\n        _this.data = _this.dt;\n    }\n    _this.data = {};\n    _this.data.composit = [];\n    var COMP = function () {\n        this.disabled = false;\n        this.flower = this.total = undefined;\n        this.add = function () {\n            _this.data.composit.push({\n                flower: this.flower,\n                total: this.total\n            });\n            this.flower = this.total = undefined;\n            this.flowerOpt.searchText = undefined;\n            this.flowerOpt.selectedItem = undefined;\n        };\n        this.remove = function ($index) {\n            _this.data.composit = _.without(_this.data.composit, _this.data.composit[$index]);\n        };\n    };\n    _this.afterSuccess = function () {\n        _this.data = {};\n        _this.data.composit = [];\n        _this.comp = new COMP();\n    };\n    _this.comp = new COMP();\n});\n\n\napp.controller('ProductListCtrl', function ($scope, htp) {\n    var _this = $scope;\n    _this.tbl = {};\n});",
    "app.controller('ProfileCtrl', function ($scope, Upload, htp) {\n    var _this = $scope;\n    _this.data = {};\n    _this.pass = {};\n    _this.errorItem = {};\n\n\n    _this.$watch('pass.new', function (n) {\n        if (_this.PassForm)\n            _this.PassForm.$setValidity('confirm.confirm', isConfirm());\n    });\n\n    _this.$watch('pass.confirm', function (n) {\n        if (_this.PassForm)\n            _this.PassForm.$setValidity('confirm.confirm', isConfirm());\n    });\n\n    var isConfirm = function () {\n        return _this.pass.new == _this.pass.confirm;\n    };\n\n\n    htp(home('console/profile/get-user-data')).then(function (response) {\n        _this.data = response;\n        _this.data.personal = new Fls('personal');\n        _this.data.personal.url = '';\n        _this.data.personal.url = home(_this.data.personal_picture);\n    });\n\n\n    _this.edit = function () {\n        htp(home('console/profile/edit'), _this.data).saveSend('Profile');\n    };\n\n\n    _this.password = function () {\n        htp(home('console/profile/change-password'), _this.pass).saveSend('Password').errorNotice(function (response) {\n            _this.errorItem = response;\n        });\n    };\n\n    _this.$watch('errorItem', function (n) {\n        console.log('n', n);\n    });\n\n    var Fls = function ($name) {\n        this.errorUploading = undefined;\n        this.file = undefined;\n        this.success = undefined;\n        this.readyUpload = undefined;\n        this.progress = undefined;\n        this.name = $name;\n        this.has = undefined;\n        this.finish = true;\n        this.url = undefined;\n        this.clear = function () {\n            this.errorUploading = this.readyUpload = this.file = this.success = this.progress = undefined;\n        };\n\n        this.clearError = function () {\n            this.errorUploading = undefined;\n        };\n\n        this.__submit = function () {\n            _this._upload(this);\n        };\n\n        this.init = function () {\n            this.has = true;\n            this.finish = false;\n        };\n    };\n\n\n    _this._upload = function (fls) {\n        fls.clearError();\n        fls.uploading = true;\n        Upload.upload({\n            url: home('console/profile/upload-profile-image'),\n            data: {file: fls.file, type: fls.name}\n        }).then(function (resp) {\n            fls.uploading = false;\n            fls.clear();\n            fls.success = true;\n            fls.finish = true;\n            fls.url = resp.data.url;\n            var d = new Date();\n            _this.data.personal.url = resp.data.url + '?ver=' + d.getTime();\n        }, function (resp) {\n            fls.errorUploading = true;\n            fls.file = undefined;\n            fls.uploading = false;\n            fls.progress = undefined;\n        }, function (evt) {\n            fls.progress = parseInt(100.0 * evt.loaded / evt.total);\n        });\n    };\n\n});",
    "app.controller('RoleCtrl', function ($scope, htp) {\n    var _this = $scope;\n    _this.check = {};\n    _this.submit = function () {\n        _this._export();\n        htp(home('console/manage/set-roles'), _this.data).saveSend('????????????');\n    };\n    _this.data = {};\n\n\n    _this.init = function () {\n        _this.loading = true;\n        htp(home('console/manage/get-roles'), {user_type: _this.data.user_type}).then(function (response) {\n            _this.data.roles = response;\n            _this.data_back = true;\n        }).after(function () {\n            _this.loading = false;\n        });\n    };\n\n    _this.$watch('data.user_type', function (n) {\n        if (n) {\n            _this.init();\n        }\n    });\n\n    _this.isIndeterminate = function () {\n        return true;\n    };\n\n    _this._export = function () {\n        var _tmp = [];\n        var hasExport = function (obj) {\n            if (obj.children) {\n                _.each(obj.children, function (item) {\n                    hasExport(item);\n                });\n            }\n            if (obj.has && obj.has == true) {\n                _tmp.push(obj._rid);\n            }\n        };\n        _.each(_this.data.roles, function (ite) {\n            hasExport(ite);\n        });\n        return _this.data.export = _tmp;\n    };\n\n    _this.parent = function (type, rid) {\n        if (_this.data[type][rid] == true) {\n            for (var i = rid; Math.floor(i / 100) > 0;) {\n                i = Math.floor(i / 100);\n                _this.data[type][i] = true;\n            }\n        }\n\n    };\n});\n\napp.directive('collection', function () {\n    return {\n        restrict: \"E\",\n        replace: true,\n        scope: {\n            collection: '='\n        },\n        template: \"<div class='inner collection'><member ng-repeat='member in collection' member='member'></member></div>\"\n    }\n\n});\n\napp.directive('member', function ($compile) {\n    return {\n        restrict: \"E\",\n        replace: true,\n        scope: {\n            member: '='\n        },\n        templateUrl: home('console/manage/role-list-template'),\n        link: function (scope, element, attrs) {\n            scope.isIn = function () {\n                var r = false;\n                var e = _.map(scope.member.children, function (item, key) {\n                    if (item.has || item.parent) {\n                        r = true;\n                        scope.member.children[key].parent = true;\n                    }\n                    return item.has;\n                });\n                return r;\n            };\n            if (angular.isObject(scope.member.children)) {\n                var tmp = \"<collection collection='member.children' ng-show='member.show' class='collection'></collection>\";\n                var $content = $compile(tmp)(scope);\n                element.append($content);\n\n                scope.toggleShow = function (member) {\n                    if (member.show == undefined) {\n                        member.show = true;\n                    } else {\n                        member.show = !member.show;\n                    }\n                };\n            }\n        }\n    }\n});\n",
    "app.directive('useChartJs', function (htp) {\n    function link(s, elem, attr) {\n        if (!s.n) {\n            s.n = {};\n        }\n        s.n.load = function () {\n            var dt = {};\n            if (s.n.send) {\n                dt = s.n.send();\n            }\n            htp(home(attr.link), dt).then(function (response) {\n                console.log('response', response);\n                s.n = angular.extend(s.n, response);\n            });\n        };\n\n        s.n.load();\n\n\n\n\n    }\n\n    return {\n        restrict: 'A',\n        scope: {\n            n: '=ngModel'\n        },\n        link: link\n    };\n});\n",
    "app.directive('useSelectSm', function (htp) {\n    function link(s, elem, attr) {\n        $(elem).dropdown({\n            onChange: function (value, text, choise) {\n                s.n = value;\n                s.$apply();\n            }\n        });\n        if (s.n) {\n            $(elem).dropdown('set selected', s.n);\n        }\n    }\n\n    return {\n        restrict: 'A',\n        scope: {\n            n: '=ngModel'\n        },\n        link: link\n    };\n});\n",
    "app.directive('groupCollection', function () {\n    return {\n        restrict: \"E\",\n        replace: true,\n        scope: {\n            collection: '=',\n            url: '='\n        },\n        template: \"<div class='inner collection group'><group-member ng-repeat='member in collection' member='member' url='url'></group-member></div>\"\n    }\n});\n\napp.directive('groupMember', function ($compile) {\n    return {\n        restrict: \"E\",\n        replace: true,\n        scope: {\n            member: '=',\n            url: '='\n        },\n        templateUrl: function (element, attr) {\n            return home('console/group-collection');\n        },\n        link: function (scope, element, attrs) {\n            if (angular.isObject(scope.member.child)) {\n                var tmp = \"<group-collection collection='member.child' class='collection'></group-collection>\";\n                var $content = $compile(tmp)(scope);\n                element.append($content);\n            }\n        }\n    }\n});"
  ]
}